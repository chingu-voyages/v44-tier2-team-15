{"version":3,"file":"static/js/557.b61f713a.chunk.js","mappings":"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","sources":["components/MainContainer/MainContainer.styled.js","components/MainContainer/MainContainer.jsx","components/Arena/Arena.styled.js","components/Scenes/SceneOne.js","components/Arena/Arena.jsx","components/GameName/GameName.styled.js","components/GameName/GameName.jsx","components/GameControls/GameControls.styled.js","components/GameControls/GameControls.jsx","components/Leaderboard/Leaderboard.styled.js","components/Leaderboard/Leaderboard.jsx","components/GamePanel/GamePanel.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/GamePanel/GamePanel.jsx","pages/GamePage/GamePage.styled.js","pages/GamePage/GamePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: ${p => p.theme.breakpoints[0]};\n  margin: 0 auto;\n  padding: 0 16px;\n \n\n\n  @media screen and (min-width: 768px) {\n    max-width: ${p => p.theme.breakpoints[1]};\n    padding: 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: ${p => p.theme.breakpoints[2]};\n    padding: 0 50px;\n  }\n`;\n","import { Container } from './MainContainer.styled';\n\nconst MainContainer = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nexport default MainContainer;\n","import styled from 'styled-components';\n\nexport const ArenaWrapp = styled.div`\n  flex-grow: 1;\n  outline: auto;\n`;\n\nexport const Game = styled.div`\n  width:500px;\n  height:535px;\n  position: absolute;\n`;\n","import Phaser from 'phaser';\nimport Game_background from '../../images/game/bg_main.png';\n\nclass SceneOne extends Phaser.Scene {\n  constructor() {\n    super({ key: 'sc_one' });\n    this.bots = [];\n\n    // this is user input comming from React\n    this.robotData = [\n      {\n        name:'xylon',\n        image:'images/bot_1.png',\n        speed: {x: 100,y: 70},\n        operator: 'NAND',\n        value: 1,\n        location: {x:100, y:50},\n      },\n\n      {\n        name:'megatron',\n        image:'images/bot_2.png',\n        speed: {x: 70,y: 100},\n        operator: 'OR',\n        value: 0,\n        location: {x:400, y:100}\n      },\n\n      {\n        name:'cyclon',\n        image:'images/bot_3.png',\n        speed: {x: 50, y: 120},\n        operator: 'XOR',\n        value: 0,\n        location: {x:100, y:500}\n\n      },\n\n      {\n        name:'pylon',\n        image:'images/bot_4.png',\n        speed: {x: 80, y: 30},\n        operator: 'XNOR',\n        value: 1,\n        location: {x:200, y:300}\n      }\n\n    ];\n  }\n\n  preload() {\n    this.load.image('game_bg', Game_background);\n    this.robotData.forEach(robotObject => this.loadImage(robotObject)); \n  }\n\n  create() {  \n    // Enable physics on the arena\n    this.physics.world.enable(this);\n    // add background to the scene\n    this.add.image(0, 0, 'game_bg');\n    // add the robots to the scene\n    this.robotData.forEach(robotObject =>  this.createBots(robotObject));\n    //add collision between bots\n    this.addCollisionBtnBots();\n    // add motion to the images\n    this.bots.forEach((bot, index) => this.addBehaviour(bot, index));\n  }\n\n  loadImage = (robotObject) => {\n    this.load.image(robotObject.name, robotObject.image);\n  };\n\n  createBots = (robotObject) => {\n    const bot = this.physics.add.image(\n      robotObject.location.x,\n      robotObject.location.y,\n      robotObject.name\n    ).setScale(0.5);\n\n    this.bots.push(bot);\n  };\n\n  addBehaviour = (bot, index) => {\n    const data = this.robotData[index];\n    bot.setVelocity(data.speed.x, data.speed.y); // Moves the image horizontally at a speed of 100 pixels per second\n    bot.value = data.value;\n    bot.operator = data.operator\n    bot.setBounce(1, 1);\n    bot.setCollideWorldBounds(true);\n    bot.speed = [data.speed.x, data.speed.y]\n  };\n\n  addCollisionBtnBots = () => {\n    for (let i = 0; i < this.bots.length; i++) {\n      for (let j = i + 1; j < this.bots.length; j++) {\n        this.physics.add.collider(this.bots[i], this.bots[j], () => {\n          this.momentaryFreeze(this.bots[i], this.bots[j]);\n        });\n      }\n    };\n  };\n \n  logicWar = (bot, oponentValue) => {\n    // AND, OR, XOR, NAND, NOR, XNOR\n    let result = false;\n    if(bot.operator === 'AND'){\n      result = bot.value && oponentValue\n    }else if(bot.operator === 'OR'){\n      result = bot.value || oponentValue\n    }else if(bot.operator === 'NOR'){\n      result = !(bot.value || oponentValue)\n    }else if(bot.operator === 'NAND'){\n      result = !(bot.value && oponentValue)\n    }else if(bot.operator === 'NOR'){\n     result = bot.value ^ oponentValue\n    }else if(bot.operator === 'XNOR'){\n      result = !(bot.value ^ oponentValue)\n    };\n    return result;\n  }\n\n  destroyLoser = (botX, botY) => {\n    const botXResult = this.logicWar(botX, botY.value);\n    const botYResult = this.logicWar(botY, botX.value);\n    let winner = []; //both bots are winners initially\n\n    if(botYResult && botXResult) {// its a tie, no winner, both bots survive\n      winner = [botX, botY];\n    }else if(!(botYResult || botXResult)){//its a loss, both lose\n      botX.destroy();\n      botY.destroy();\n    }else if(botYResult){ // botY wins\n      botX.destroy();\n      winner = [botY];\n    }else if(botXResult){ // botX wins\n      botY.destroy();\n      winner = [botX];\n    }\n    return winner;\n  }\n\n  momentaryFreeze = (botX, botY) => {\n    // freeze the colliding bots\n    botX.body.setVelocity(0, 0);;\n    botY.body.setVelocity(0, 0);;\n    setTimeout(() => {\n      // destroy the losing bot\n      const winner = this.destroyLoser(botX, botY);\n      // resume motion for the winning bot\n      this.resumeMotion(winner);\n    }, 1000);\n  }\n\n  resumeMotion = (winner) => {\n    if (winner.length) {\n      winner.forEach(bot => bot.body.setVelocity(bot.speed[0], bot.speed[1])); \n    }\n  };\n\n}\n\nexport default SceneOne;\n","import { ArenaWrapp, Game } from './Arena.styled';\nimport React, { useEffect } from 'react';\nimport Phaser from 'phaser';\nimport SceneOne from 'components/Scenes/SceneOne';\n\nconst Arena = () => {\n\n  useEffect(() => {\n    const config = {\n      type: Phaser.AUTO,\n      width: 500,\n      height: 535,\n      scene: SceneOne,\n      parent: \"game-container\",\n      physics: {\n        default: 'arcade',\n        arcade: {\n          gravity: 0,\n        },\n        debug: true,\n      },\n\n\n      \n    }; \n\n\n    const game = new Phaser.Game(config);\n\n\n    return () => {\n      game.destroy();\n    };\n  }, []);\n\n  return (\n    <ArenaWrapp>\n      <Game className='gamecanvas' id=\"game-container\" />\n    </ArenaWrapp>\n  );\n\n};\n\nexport default Arena;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  position: absolute;\n  margin-top: 10px;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-align: center;\n`;\n","import { Title } from './GameName.styled';\n\nconst GameName = () => {\n  return <Title>Logic Warriors</Title>;\n};\n\nexport default GameName;\n","import styled from 'styled-components';\n\nexport const ControllsWrapp = styled.div``;\n\nexport const BtnStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  height: 51px;\n  width: 160px;\n  margin: ${p => p.theme.space[5]}px;\n  padding: 16px 32px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.main};\n  text-align: center;\n  color: ${p => p.theme.colors.superLightgray};\n  background-color: ${p => p.theme.colors.medGreen};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: ${p => p.theme.colors.medBrown};\n    color: ${p => p.theme.colors.sandy};\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    padding: 18px 52px;\n\n    height: 55px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    padding: 23px 52px;\n    width: 200px;\n    height: 65px;\n  }\n`;\n","import { useState } from 'react';\nimport { ControllsWrapp, BtnStyled } from './GameControls.styled';\n\nconst GameControlls = () => {\n  const [isButtleOn, setIsButtleOn] = useState(false);\n  const handleClick = () => {\n    if (!isButtleOn) {\n      setIsButtleOn(true);\n    } else {\n      setIsButtleOn(false);\n    }\n  };\n\n  const buttonText = isButtleOn ? 'Stop' : 'Battle';\n  return (\n    <ControllsWrapp>\n      <BtnStyled type=\"button\" onClick={handleClick}>\n        {buttonText}\n      </BtnStyled>\n    </ControllsWrapp>\n  );\n};\n\nexport default GameControlls;\n","import styled from 'styled-components';\n\nexport const LeaderboardStyled = styled.div`\n  outline: auto;\n`;\n","import { LeaderboardStyled } from './Leaderboard.styled';\n\nconst Leaderboard = () => {\n  return (\n    <LeaderboardStyled>\n      <h2>Leaderboard</h2>\n    </LeaderboardStyled>\n  );\n};\n\nexport default Leaderboard;\n","import styled from 'styled-components';\n\nexport const PanelWrapp = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  outline: auto;\n`;\n\nexport const BtnStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  height: 51px;\n  width: 160px;\n  margin: ${p => p.theme.space[5]}px;\n  padding: 16px 32px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.main};\n  text-align: center;\n  color: ${p => p.theme.colors.superLightgray};\n  background-color: ${p => p.theme.colors.medGreen};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: ${p => p.theme.colors.medBrown};\n    color: ${p => p.theme.colors.sandy};\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    padding: 18px 52px;\n    height: 55px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    padding: 23px 52px;\n    width: 200px;\n    height: 65px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalDiv = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  min-width: 800px;\n  padding: 40px;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  color: ${p => p.theme.colors.superLightgray};\n  background-color: ${p => p.theme.colors.medGreen};\n`;\n","import { useEffect } from 'react';\nimport { ModalDiv, Overlay } from 'components/Modal/Modal.styled';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose }) => {\n  const closeByBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const closeByEsc = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', closeByEsc);\n\n    return () => {\n      window.removeEventListener('keydown', closeByEsc);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <Overlay onClick={closeByBackdrop}>\n      <ModalDiv>\n        <p>Choose configuration</p>\n        <input type=\"text\" />\n        <select>\n          <option>0</option>\n          <option>1</option>\n        </select>\n        <select>\n          <option value=\"AND\">AND</option>\n          <option value=\"OR\">OR</option>\n          <option value=\"XOR\">XOR</option>\n          <option value=\"NOT\">NOT</option>\n        </select>\n        <div>\n          <input type=\"range\" id=\"speed \" name=\"speed \" min=\"0\" max=\"8\" />\n          <label htmlFor=\"speed \">Volume</label>\n        </div>\n        <select>\n          <option value=\"North\">North</option>\n          <option value=\"South\">South</option>\n          <option value=\"East\">East</option>\n          <option value=\"West\">West</option>\n        </select>\n        <button type=\"button\">Save</button>\n      </ModalDiv>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport GameControlls from 'components/GameControls/GameControls';\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\nimport { BtnStyled, PanelWrapp } from './GamePanel.styled';\nimport Modal from 'components/Modal';\n\nconst GamePanel = () => {\n  const [isModalShown, setIsModalShown] = useState(false);\n\n  const toogleModal = () => {\n    setIsModalShown(prevState => !prevState);\n  };\n  return (\n    <>\n      <PanelWrapp>\n        <BtnStyled type=\"button\" onClick={toogleModal}>\n          Open settings\n        </BtnStyled>\n\n        <GameControlls />\n        <Leaderboard />\n      </PanelWrapp>\n      {isModalShown && <Modal onClose={toogleModal} />}\n    </>\n  );\n};\n\nexport default GamePanel;\n","import styled from 'styled-components';\n\nexport const StyledWrapp = styled.div`\n  display: block;\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    display: flex;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n  }\n`;\n","import Arena from 'components/Arena/Arena';\nimport GameName from 'components/GameName/GameName';\nimport GamePanel from 'components/GamePanel/GamePanel';\nimport MainContainer from 'components/MainContainer/MainContainer';\nimport { StyledWrapp } from './GamePage.styled';\n\nconst GamePage = () => {\n  return (\n    <MainContainer>\n      <GameName />\n      <StyledWrapp>\n        <GamePanel />\n        <Arena />\n      </StyledWrapp>\n    </MainContainer>\n  );\n};\n\nexport default GamePage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","p","theme","breakpoints","_ref","children","_jsx","ArenaWrapp","Game","_templateObject2","_Phaser$Scene","_inherits","SceneOne","_super","_createSuper","_this","_classCallCheck","call","key","loadImage","robotObject","load","image","name","createBots","bot","physics","add","location","x","y","setScale","bots","push","addBehaviour","index","data","robotData","setVelocity","speed","value","operator","setBounce","setCollideWorldBounds","addCollisionBtnBots","_loop","i","_loop2","j","collider","momentaryFreeze","length","logicWar","oponentValue","result","destroyLoser","botX","botY","botXResult","botYResult","winner","destroy","body","setTimeout","resumeMotion","forEach","_createClass","_this2","this","Game_background","_this3","world","enable","Phaser","useEffect","config","type","width","height","scene","parent","default","arcade","gravity","debug","game","className","id","Title","fontWeights","bold","ControllsWrapp","BtnStyled","space","fontSizes","s","lineHeights","main","colors","superLightgray","medGreen","borders","none","radii","normal","medBrown","sandy","_useState","useState","_useState2","_slicedToArray","isButtleOn","setIsButtleOn","buttonText","onClick","LeaderboardStyled","PanelWrapp","Overlay","ModalDiv","modalRoot","document","querySelector","onClose","closeByEsc","e","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","_jsxs","min","max","htmlFor","isModalShown","setIsModalShown","toogleModal","prevState","_Fragment","GameControlls","Leaderboard","Modal","StyledWrapp","MainContainer","GameName","GamePanel","Arena"],"sourceRoot":""}