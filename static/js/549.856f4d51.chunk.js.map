{"version":3,"file":"static/js/549.856f4d51.chunk.js","mappings":"sOAEaA,EAAaC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sEAMvBC,EAAOH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oE,qHCyJ9B,EA9Jc,SAAAG,IAAAC,EAAAA,EAAAA,GAAAC,EAAAF,GAAA,IAAAG,GAAAC,EAAAA,EAAAA,GAAAF,GACZ,SAAAA,IAAe,IAADG,EA2CV,OA3CUC,EAAAA,EAAAA,GAAA,KAAAJ,IACZG,EAAAF,EAAAI,KAAA,KAAM,CAAEC,IAAK,YA+DfC,UAAY,SAACC,GACXL,EAAKM,KAAKC,MAAMF,EAAYG,KAAMH,EAAYE,MAChD,EAACP,EAEDS,WAAa,SAACJ,GACZ,IAAMK,EAAMV,EAAKW,QAAQC,IAAIL,MAC3BF,EAAYQ,SAASC,EACrBT,EAAYQ,SAASE,EACrBV,EAAYG,MACZQ,SAAS,IAEXhB,EAAKiB,KAAKC,KAAKR,EACjB,EAACV,EAEDmB,aAAe,SAACT,EAAKU,GACnB,IAAMC,EAAOrB,EAAKsB,UAAUF,GAC5BV,EAAIa,YAAYF,EAAKG,MAAMV,EAAGO,EAAKG,MAAMT,GACzCL,EAAIe,MAAQJ,EAAKI,MACjBf,EAAIgB,SAAWL,EAAKK,SACpBhB,EAAIiB,UAAU,EAAG,GACjBjB,EAAIkB,uBAAsB,GAC1BlB,EAAIc,MAAQ,CAACH,EAAKG,MAAMV,EAAGO,EAAKG,MAAMT,EACxC,EAACf,EAED6B,oBAAsB,WACpB,IAD2B,IAADC,EAAA,SAAAC,GAExB,IAD0C,IAADC,EAAA,SAAAC,GAEvCjC,EAAKW,QAAQC,IAAIsB,SAASlC,EAAKiB,KAAKc,GAAI/B,EAAKiB,KAAKgB,IAAI,WACpDjC,EAAKmC,gBAAgBnC,EAAKiB,KAAKc,GAAI/B,EAAKiB,KAAKgB,GAC/C,GACF,EAJSA,EAAIF,EAAI,EAAGE,EAAIjC,EAAKiB,KAAKmB,OAAQH,IAAGD,EAAAC,EAK/C,EANSF,EAAI,EAAGA,EAAI/B,EAAKiB,KAAKmB,OAAQL,IAAGD,EAAAC,EAO3C,EAAC/B,EAEDqC,SAAW,SAAC3B,EAAK4B,GAEf,IAAIC,GAAS,EAcb,MAboB,QAAjB7B,EAAIgB,SACLa,EAAS7B,EAAIe,OAASa,EACE,OAAjB5B,EAAIgB,SACXa,EAAS7B,EAAIe,OAASa,EACE,QAAjB5B,EAAIgB,SACXa,IAAW7B,EAAIe,OAASa,GACA,SAAjB5B,EAAIgB,SACXa,IAAW7B,EAAIe,OAASa,GACA,QAAjB5B,EAAIgB,SACZa,EAAS7B,EAAIe,MAAQa,EACI,SAAjB5B,EAAIgB,WACXa,IAAW7B,EAAIe,MAAQa,IAElBC,CACT,EAACvC,EAEDwC,aAAe,SAACC,EAAMC,GACpB,IAAMC,EAAa3C,EAAKqC,SAASI,EAAMC,EAAKjB,OACtCmB,EAAa5C,EAAKqC,SAASK,EAAMD,EAAKhB,OACxCoB,EAAS,GAcb,OAZGD,GAAcD,EACfE,EAAS,CAACJ,EAAMC,GACPE,GAAcD,EAGhBC,GACPH,EAAKK,UACLD,EAAS,CAACH,IACHC,IACPD,EAAKI,UACLD,EAAS,CAACJ,KAPVA,EAAKK,UACLJ,EAAKI,WAQAD,CACT,EAAC7C,EAEDmC,gBAAkB,SAACM,EAAMC,GAEvBD,EAAKM,KAAKxB,YAAY,EAAG,GACzBmB,EAAKK,KAAKxB,YAAY,EAAG,GACzByB,YAAW,WAET,IAAMH,EAAS7C,EAAKwC,aAAaC,EAAMC,GAEvC1C,EAAKiD,aAAaJ,EACpB,GAAG,IACL,EAAC7C,EAEDiD,aAAe,SAACJ,GACVA,EAAOT,QACTS,EAAOK,SAAQ,SAAAxC,GAAG,OAAIA,EAAIqC,KAAKxB,YAAYb,EAAIc,MAAM,GAAId,EAAIc,MAAM,GAAG,GAE1E,EAvJExB,EAAKiB,KAAO,GAGZjB,EAAKsB,UAAY,CACf,CACEd,KAAK,QACLD,MAAM,mBACNiB,MAAO,CAACV,EAAG,IAAIC,EAAG,IAClBW,SAAU,OACVD,MAAO,EACPZ,SAAU,CAACC,EAAE,IAAKC,EAAE,KAGtB,CACEP,KAAK,WACLD,MAAM,mBACNiB,MAAO,CAACV,EAAG,GAAGC,EAAG,KACjBW,SAAU,KACVD,MAAO,EACPZ,SAAU,CAACC,EAAE,IAAKC,EAAE,MAGtB,CACEP,KAAK,SACLD,MAAM,mBACNiB,MAAO,CAACV,EAAG,GAAIC,EAAG,KAClBW,SAAU,MACVD,MAAO,EACPZ,SAAU,CAACC,EAAE,IAAKC,EAAE,MAItB,CACEP,KAAK,QACLD,MAAM,mBACNiB,MAAO,CAACV,EAAG,GAAIC,EAAG,IAClBW,SAAU,OACVD,MAAO,EACPZ,SAAU,CAACC,EAAE,IAAKC,EAAE,OAGtBf,CACJ,CAkBC,OAlBAmD,EAAAA,EAAAA,GAAAtD,EAAA,EAAAM,IAAA,UAAAsB,MAED,WAAW,IAAD2B,EAAA,KACRC,KAAK/C,KAAKC,MAAM,UAAW+C,GAC3BD,KAAK/B,UAAU4B,SAAQ,SAAA7C,GAAW,OAAI+C,EAAKhD,UAAUC,EAAY,GACnE,GAAC,CAAAF,IAAA,SAAAsB,MAED,WAAU,IAAD8B,EAAA,KAEPF,KAAK1C,QAAQ6C,MAAMC,OAAOJ,MAE1BA,KAAKzC,IAAIL,MAAM,EAAG,EAAG,WAErB8C,KAAK/B,UAAU4B,SAAQ,SAAA7C,GAAW,OAAKkD,EAAK9C,WAAWJ,EAAY,IAEnEgD,KAAKxB,sBAELwB,KAAKpC,KAAKiC,SAAQ,SAACxC,EAAKU,GAAK,OAAKmC,EAAKpC,aAAaT,EAAKU,EAAM,GACjE,KAACvB,CAAA,CA/DW,CAAS6D,IAAAA,O,SCwCvB,EAtCc,WA8BZ,OA5BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,CACbC,KAAMH,IAAAA,KACNI,MAAO,IACPC,OAAQ,IACRC,MAAOnE,EACPoE,OAAQ,iBACRtD,QAAS,CACPuD,QAAS,SACTC,OAAQ,CACNC,QAAS,GAEXC,OAAO,IAQLC,EAAO,IAAIZ,IAAAA,MAAYE,GAG7B,OAAO,WACLU,EAAKxB,SACP,CACF,GAAG,KAGDyB,EAAAA,EAAAA,KAAClF,EAAU,CAAAmF,UACTD,EAAAA,EAAAA,KAAC9E,EAAI,CAACgF,UAAU,aAAaC,GAAG,oBAItC,E,SCvCaC,EAAiBrF,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAE3BoF,EAAYtF,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0rBAO1B,SAAAqF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAE,IAElB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,UAAUC,CAAC,IACtB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,YAAYC,IAAI,IAEnC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,cAAc,IACvB,SAAAR,GAAC,OAAIA,EAAEC,MAAMM,OAAOE,QAAQ,IAEtC,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,QAAQC,IAAI,IAClB,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,MAAMC,MAAM,IAGpB,SAAAb,GAAC,OAAIA,EAAEC,MAAMM,OAAOO,QAAQ,IACvC,SAAAd,GAAC,OAAIA,EAAEC,MAAMM,OAAOQ,KAAK,IAEJ,SAAAf,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,IAK3B,SAAAhB,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,ICR7D,EApBsB,WACpB,IAAAC,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAS1BI,EAAaF,EAAa,OAAS,SACzC,OACE3B,EAAAA,EAAAA,KAACI,EAAc,CAAAH,UACbD,EAAAA,EAAAA,KAACK,EAAS,CAACf,KAAK,SAASwC,QAXT,WAIhBF,GAHGD,EAKP,EAKkD1B,SAC3C4B,KAIT,ECnBaE,EAAoBhH,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QCQ3C,EARoB,WAClB,OACE+E,EAAAA,EAAAA,KAAC+B,EAAiB,CAAA9B,UAChBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBAGV,ECNa+B,EAAajH,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gGAOvBoF,EAAYtF,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0rBAO1B,SAAAqF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAE,IAElB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,UAAUC,CAAC,IACtB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,YAAYC,IAAI,IAEnC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,cAAc,IACvB,SAAAR,GAAC,OAAIA,EAAEC,MAAMM,OAAOE,QAAQ,IAEtC,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,QAAQC,IAAI,IAClB,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,MAAMC,MAAM,IAIpB,SAAAb,GAAC,OAAIA,EAAEC,MAAMM,OAAOO,QAAQ,IACvC,SAAAd,GAAC,OAAIA,EAAEC,MAAMM,OAAOQ,KAAK,IAEJ,SAAAf,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,IAI3B,SAAAhB,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,I,SClChDW,EAAUlH,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mJAUpBiH,EAAWnH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0SAYvB,SAAAqF,GAAC,OAAIA,EAAEC,MAAMM,OAAOsB,cAAc,IACvB,SAAA7B,GAAC,OAAIA,EAAEC,MAAMM,OAAOuB,UAAU,IAGvCC,EAAQtH,EAAAA,GAAAA,GAASuH,IAAAA,GAAArH,EAAAA,EAAAA,GAAA,uDAEX,SAAAqF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAE,IC5B3B+B,EAAOxH,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sHAQlBuH,EAAYzH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uDAItBwH,EAAe1H,EAAAA,GAAAA,OAAauH,IAAAA,GAAArH,EAAAA,EAAAA,GAAA,4wBAI1B,SAAAqF,GAAC,OAAIA,EAAEC,MAAME,UAAUC,CAAC,IACtB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,YAAY+B,OAAO,IAEtC,SAAApC,GAAC,OAAIA,EAAEC,MAAMM,OAAOE,QAAQ,IACjB,SAAAT,GAAC,OAAIA,EAAEC,MAAMM,OAAO8B,eAAe,IASvB,SAAArC,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,IAI3B,SAAAhB,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,IAMhD,SAAAhB,GAAC,OAAIA,EAAEC,MAAMM,OAAOE,QAAQ,IACvB,SAAAT,GAAC,OAAIA,EAAEC,MAAMM,OAAO8B,eAAe,IAClC,SAAArC,GAAC,OAAIA,EAAEC,MAAMqC,YAAYzB,MAAM,IAOrC0B,EAAc9H,EAAAA,GAAAA,MAAY+H,IAAAA,GAAA7H,EAAAA,EAAAA,GAAA,2HAItB,SAAAqF,GAAC,OAAIA,EAAEC,MAAMqC,YAAYG,IAAI,IACnC,SAAAzC,GAAC,OAAIA,EAAEC,MAAMM,OAAOsB,cAAc,IAGhCa,GAAWjI,EAAAA,GAAAA,MAAYkI,IAAAA,GAAAhI,EAAAA,EAAAA,GAAA,6OAId,SAAAqF,GAAC,OAAIA,EAAEC,MAAMM,OAAOO,QAAQ,IAG1B,SAAAd,GAAC,OAAIA,EAAEC,MAAMM,OAAOO,QAAQ,IACxB,SAAAd,GAAC,OAAIA,EAAEC,MAAMM,OAAOO,QAAQ,IAM3C8B,GAAYnI,EAAAA,GAAAA,MAAYoI,IAAAA,GAAAlI,EAAAA,EAAAA,GAAA,+rBAQpB,SAAAqF,GAAC,OAAIA,EAAEC,MAAM6C,MAAMxC,IAAI,IAEvB,SAAAN,GAAC,OAAIA,EAAEC,MAAMqC,YAAYzB,MAAM,IACjC,SAAAb,GAAC,OAAIA,EAAEC,MAAME,UAAUC,CAAC,IAI5B,SAAAJ,GAAC,OAAIA,EAAEC,MAAMM,OAAOE,QAAQ,IACvB,SAAAT,GAAC,OAAIA,EAAEC,MAAMM,OAAO8B,eAAe,IACjB,SAAArC,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,IAoBhD+B,GAAQtI,EAAAA,GAAAA,MAAYuI,IAAAA,GAAArI,EAAAA,EAAAA,GAAA,6CACtB,SAAAqF,GAAC,OAAIA,EAAEC,MAAMM,OAAO8B,eAAe,IAC9B,SAAArC,GAAC,OAAIA,EAAEC,MAAMM,OAAOuB,UAAU,IAGjCmB,GAAYxI,EAAAA,GAAAA,OAAayI,IAAAA,GAAAvI,EAAAA,EAAAA,GAAA,46BAStB,SAAAqF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAE,IAEpB,SAAAF,GAAC,OAAIA,EAAEC,MAAM6C,MAAMxC,IAAI,IAEvB,SAAAN,GAAC,OAAIA,EAAEC,MAAMqC,YAAYzB,MAAM,IACjC,SAAAb,GAAC,OAAIA,EAAEC,MAAME,UAAUC,CAAC,IAI5B,SAAAJ,GAAC,OAAIA,EAAEC,MAAMM,OAAOsB,cAAc,IAEvB,SAAA7B,GAAC,OAAIA,EAAEC,MAAMM,OAAO8B,eAAe,IASzC,SAAArC,GAAC,OAAIA,EAAEC,MAAMkD,YAAY7C,IAAI,IAE3B,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,OAAOsB,cAAc,IACvC,SAAA7B,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,cAAc,IAEb,SAAAR,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,IAI3B,SAAAhB,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,ICgE7D,GA3M0B,SAAHoC,GAAqB,IAAfC,EAAOD,EAAPC,QAC3BpC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCqC,EAAUnC,EAAA,GAAEoC,EAAapC,EAAA,GAChCqC,GAA0CtC,EAAAA,EAAAA,UAAS,KAAIuC,GAAArC,EAAAA,EAAAA,GAAAoC,EAAA,GAAhDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA8B1C,EAAAA,EAAAA,WAAS,GAAM2C,GAAAzC,EAAAA,EAAAA,GAAAwC,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAoC9C,EAAAA,EAAAA,UAAS,IAAG+C,GAAA7C,EAAAA,EAAAA,GAAA4C,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA0ClD,EAAAA,EAAAA,UAAS,KAAImD,GAAAjD,EAAAA,EAAAA,GAAAgD,EAAA,GAAhDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA0BtD,EAAAA,EAAAA,UAAS,KAAIuD,GAAArD,EAAAA,EAAAA,GAAAoD,EAAA,GAAhC7H,EAAK8H,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAAkCzD,EAAAA,EAAAA,UAAS,OAAM0D,GAAAxD,EAAAA,EAAAA,GAAAuD,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAkC7D,EAAAA,EAAAA,UAAS,SAAQ8D,GAAA5D,EAAAA,EAAAA,GAAA2D,EAAA,GAA5CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,EAAe,SAAAC,GACnB,OAAQA,EAAEC,OAAOxF,IACf,IAAK,QACH,IAAMhE,EACJuJ,EAAEC,OAAOzI,MAAM0I,OAAO,GAAGC,cAAgBH,EAAEC,OAAOzI,MAAM4I,MAAM,GAChEjC,EAAc1H,GAEd,MACF,IAAK,UACH8H,EAAiByB,EAAEC,OAAOzI,OAE1B,MACF,IAAK,UACHmH,GAAW,SAAA0B,GAAS,OAAmB,IAAdA,CAAkC,IAC3D,MACF,IAAK,QACH,IAAMC,EACJN,EAAEC,OAAOzI,MAAM0I,OAAO,GAAGC,cAAgBH,EAAEC,OAAOzI,MAAM4I,MAAM,GAC5DlC,IAAeoC,GACjBC,QAAQC,IAAI,yCAEdzB,EAAcuB,GAEd,MAEF,IAAK,UACHnB,EAAiBa,EAAEC,OAAOzI,OAE1B,MACF,IAAK,YACHkI,EAAaM,EAAEC,OAAOzI,OAEtB,MACF,IAAK,QACH8H,EAASU,EAAEC,OAAOzI,OAElB,MACF,IAAK,YACHsI,EAAaE,EAAEC,OAAOzI,OAO5B,EA8BA,OACEiJ,EAAAA,EAAAA,MAAC5D,EAAI,CAAC6D,SA7Ba,SAAAV,GAEnB,GADAA,EAAEW,iBACEzC,IAAeY,EAAnB,CAIE,IAAM8B,EAAW,CACfC,SAAU3C,EACV4C,WAAYxC,GAMRlH,EAAO,CACXJ,KAAM0H,EAAU,CAACkC,EALA,CACjBG,SAAUjC,EACVkC,WAAY9B,IAG6B,CAAC0B,GAC1ClC,QAAAA,EACAnH,MAAOA,EACPkI,UAAWA,EACXI,UAAWA,GAGPlG,EAASsH,KAAKC,UAAU9J,GAC9B+J,aAAaC,QAAQ,UAAWzH,GAChCsE,GACF,MAtBEsC,QAAQC,IAAI,2BAuBhB,EAG+BjG,SAAA,EAC3BkG,EAAAA,EAAAA,MAAC3D,EAAS,CAAAvC,SAAA,EACRkG,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAA9G,SAAA,EACEkG,EAAAA,EAAAA,MAACtD,EAAW,CAACmE,QAAQ,QAAO/G,SAAA,CAAC,mBAE3BD,EAAAA,EAAAA,KAACkD,GAAS,CACR/C,GAAG,QACHb,KAAK,OACLrD,KAAK,QACLgL,SAAUxB,QAGdU,EAAAA,EAAAA,MAACtD,EAAW,CAAA5C,SAAA,CAAC,sBAEXkG,EAAAA,EAAAA,MAAC1D,EAAY,CACXtC,GAAG,UACH+G,WAAW,EACXC,aAAcnD,EACdiD,SAAUxB,EAAaxF,SAAA,EAEvBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,IAAG+C,SAAC,OAClBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,IAAG+C,SAAC,gBAKxBkG,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAA9G,SAAA,EACEkG,EAAAA,EAAAA,MAACtD,EAAW,CACVmE,QAAQ,UACRI,MAAO,CACLC,MAAO,UACPC,eAAgB,QAChBC,OAAQ,uBACRtH,SAAA,CACH,mBAECD,EAAAA,EAAAA,KAACgD,GAAQ,CACP7C,GAAG,UACHlE,KAAK,UACLqD,KAAK,WACL8E,QAASA,EACT6C,SAAUxB,OAGbrB,IACC+B,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAA9G,SAAA,EACEkG,EAAAA,EAAAA,MAACtD,EAAW,CAACmE,QAAQ,QAAO/G,SAAA,CAAC,mBAE3BD,EAAAA,EAAAA,KAACkD,GAAS,CACR/C,GAAG,QACHb,KAAK,OACLrD,KAAK,QACLgL,SAAUxB,QAGdU,EAAAA,EAAAA,MAACtD,EAAW,CAAA5C,SAAA,CAAC,sBAEXkG,EAAAA,EAAAA,MAAC1D,EAAY,CACXtC,GAAG,UACH+G,WAAW,EACXC,aAAcvC,EACdqC,SAAUxB,EAAaxF,SAAA,EAEvBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,IAAG+C,SAAC,OAClBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,IAAG+C,SAAC,sBAO9BkG,EAAAA,EAAAA,MAACtD,EAAW,CAAA5C,SAAA,CAAC,sBAEXkG,EAAAA,EAAAA,MAAC1D,EAAY,CACXtC,GAAG,YACH+G,WAAW,EACXC,aAAchC,EACd8B,SAAUxB,EAAaxF,SAAA,EAEvBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,MAAK+C,SAAC,SACpBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,KAAI+C,SAAC,QACnBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,MAAK+C,SAAC,SACpBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,MAAK+C,SAAC,eAGxBkG,EAAAA,EAAAA,MAACtD,EAAW,CAACmE,QAAQ,QAAO/G,SAAA,CAAC,WAE3BD,EAAAA,EAAAA,KAACqD,GAAK,CACJ/D,KAAK,QACLa,GAAG,QACHlE,KAAK,QACLuL,IAAI,IACJC,IAAI,KACJC,KAAM,EACNxK,MAAOD,EACPgK,SAAUxB,QAGdU,EAAAA,EAAAA,MAACtD,EAAW,CAAA5C,SAAA,CAAC,cAEXkG,EAAAA,EAAAA,MAAC1D,EAAY,CACXtC,GAAG,YACH+G,WAAW,EACXC,aAAc5B,EACd0B,SAAUxB,EAAaxF,SAAA,EAEvBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,QAAO+C,SAAC,WACtBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,QAAO+C,SAAC,WACtBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,OAAM+C,SAAC,UACrBD,EAAAA,EAAAA,KAAA,UAAQ9C,MAAM,OAAM+C,SAAC,gBAGzBD,EAAAA,EAAAA,KAACuD,GAAS,CAACjE,KAAK,QAAOW,SAAC,WAG9B,ECjNM0H,GAAYC,SAASC,cAAc,eAiCzC,GA/Bc,SAAHnE,GAAqB,IAAfC,EAAOD,EAAPC,QAoBf,OAbAvE,EAAAA,EAAAA,YAAU,WACR,IAAM0I,EAAa,SAAApC,GACF,WAAXA,EAAEqC,MACJpE,GAEJ,EAGA,OAFAqE,OAAOC,iBAAiB,UAAWH,GAE5B,WACLE,OAAOE,oBAAoB,UAAWJ,EACxC,CACF,GAAG,CAACnE,KAEGwE,EAAAA,EAAAA,eACLnI,EAAAA,EAAAA,KAACiC,EAAO,CAACH,QApBa,SAAA4D,GAClBA,EAAEC,SAAWD,EAAE0C,eACjBzE,GAEJ,EAgBoC1D,UAChCkG,EAAAA,EAAAA,MAACjE,EAAQ,CAAAjC,SAAA,EACPD,EAAAA,EAAAA,KAACqC,EAAK,CAAApC,SAAC,0BACPD,EAAAA,EAAAA,KAACqI,GAAiB,CAAC1E,QAASA,SAGhCgE,GAEJ,ECTA,GArBkB,WAChB,IAAApG,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD+G,EAAY7G,EAAA,GAAE8G,EAAe9G,EAAA,GAE9B+G,EAAc,WAClBD,GAAgB,SAAAxC,GAAS,OAAKA,CAAS,GACzC,EACA,OACEI,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAA9G,SAAA,EACEkG,EAAAA,EAAAA,MAACnE,EAAU,CAAA/B,SAAA,EACTD,EAAAA,EAAAA,KAACK,EAAS,CAACf,KAAK,SAASwC,QAAS0G,EAAYvI,SAAC,mBAI/CD,EAAAA,EAAAA,KAACyI,EAAa,KACdzI,EAAAA,EAAAA,KAAC0I,EAAW,OAEbJ,IAAgBtI,EAAAA,EAAAA,KAAC2I,GAAK,CAAChF,QAAS6E,MAGvC,ECvBaI,GAAY7N,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6PACpB,SAAAqF,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,IAKzB,SAAAhB,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,IAK3B,SAAAhB,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,ICP5C,GAJsB,SAAHoC,GAAsB,IAAhBzD,EAAQyD,EAARzD,SACvB,OAAOD,EAAAA,EAAAA,KAAC4I,GAAS,CAAA3I,SAAEA,GACrB,ECFa4I,GAAc9N,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6JAEH,SAAAqF,GAAC,OAAIA,EAAEC,MAAMe,YAAY,EAAE,ICa7D,GAXiB,WACf,OACEtB,EAAAA,EAAAA,KAAC8I,GAAa,CAAA7I,UACZkG,EAAAA,EAAAA,MAAC0C,GAAW,CAAA5I,SAAA,EACVD,EAAAA,EAAAA,KAAC+I,GAAS,KACV/I,EAAAA,EAAAA,KAACgJ,EAAK,QAId,C","sources":["components/Arena/Arena.styled.js","components/Scenes/SceneOne.js","components/Arena/Arena.jsx","components/GameControls/GameControls.styled.js","components/GameControls/GameControls.jsx","components/Leaderboard/Leaderboard.styled.js","components/Leaderboard/Leaderboard.jsx","components/GamePanel/GamePanel.styled.js","components/Modal/Modal.styled.js","components/ConfigurationForm/ConfigurationForm.styled.js","components/ConfigurationForm/ConfigurationForm.js","components/Modal/Modal.jsx","components/GamePanel/GamePanel.jsx","components/MainContainer/MainContainer.styled.js","components/MainContainer/MainContainer.jsx","pages/GamePage/GamePage.styled.js","pages/GamePage/GamePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ArenaWrapp = styled.div`\n  flex-grow: 1;\n  min-width: 500px;\n  min-height: 535px;\n`;\n\nexport const Game = styled.div`\n  width: 500px;\n  height: 535px;\n  position: absolute;\n`;\n","import Phaser from 'phaser';\nimport Game_background from '../../images/game/bg_main.png';\n\nclass SceneOne extends Phaser.Scene {\n  constructor() {\n    super({ key: 'sc_one' });\n    this.bots = [];\n\n    // this is user input comming from React\n    this.robotData = [\n      {\n        name:'xylon',\n        image:'images/bot_1.png',\n        speed: {x: 100,y: 70},\n        operator: 'NAND',\n        value: 1,\n        location: {x:100, y:50},\n      },\n\n      {\n        name:'megatron',\n        image:'images/bot_2.png',\n        speed: {x: 70,y: 100},\n        operator: 'OR',\n        value: 0,\n        location: {x:400, y:100}\n      },\n\n      {\n        name:'cyclon',\n        image:'images/bot_3.png',\n        speed: {x: 50, y: 120},\n        operator: 'XOR',\n        value: 0,\n        location: {x:100, y:500}\n\n      },\n\n      {\n        name:'pylon',\n        image:'images/bot_4.png',\n        speed: {x: 80, y: 30},\n        operator: 'XNOR',\n        value: 1,\n        location: {x:200, y:300}\n      }\n\n    ];\n  }\n\n  preload() {\n    this.load.image('game_bg', Game_background);\n    this.robotData.forEach(robotObject => this.loadImage(robotObject)); \n  }\n\n  create() {  \n    // Enable physics on the arena\n    this.physics.world.enable(this);\n    // add background to the scene\n    this.add.image(0, 0, 'game_bg');\n    // add the robots to the scene\n    this.robotData.forEach(robotObject =>  this.createBots(robotObject));\n    //add collision between bots\n    this.addCollisionBtnBots();\n    // add motion to the images\n    this.bots.forEach((bot, index) => this.addBehaviour(bot, index));\n  }\n\n  loadImage = (robotObject) => {\n    this.load.image(robotObject.name, robotObject.image);\n  };\n\n  createBots = (robotObject) => {\n    const bot = this.physics.add.image(\n      robotObject.location.x,\n      robotObject.location.y,\n      robotObject.name\n    ).setScale(0.5);\n\n    this.bots.push(bot);\n  };\n\n  addBehaviour = (bot, index) => {\n    const data = this.robotData[index];\n    bot.setVelocity(data.speed.x, data.speed.y); // Moves the image horizontally at a speed of 100 pixels per second\n    bot.value = data.value;\n    bot.operator = data.operator\n    bot.setBounce(1, 1);\n    bot.setCollideWorldBounds(true);\n    bot.speed = [data.speed.x, data.speed.y]\n  };\n\n  addCollisionBtnBots = () => {\n    for (let i = 0; i < this.bots.length; i++) {\n      for (let j = i + 1; j < this.bots.length; j++) {\n        this.physics.add.collider(this.bots[i], this.bots[j], () => {\n          this.momentaryFreeze(this.bots[i], this.bots[j]);\n        });\n      }\n    };\n  };\n \n  logicWar = (bot, oponentValue) => {\n    // AND, OR, XOR, NAND, NOR, XNOR\n    let result = false;\n    if(bot.operator === 'AND'){\n      result = bot.value && oponentValue\n    }else if(bot.operator === 'OR'){\n      result = bot.value || oponentValue\n    }else if(bot.operator === 'NOR'){\n      result = !(bot.value || oponentValue)\n    }else if(bot.operator === 'NAND'){\n      result = !(bot.value && oponentValue)\n    }else if(bot.operator === 'NOR'){\n     result = bot.value ^ oponentValue\n    }else if(bot.operator === 'XNOR'){\n      result = !(bot.value ^ oponentValue)\n    };\n    return result;\n  }\n\n  destroyLoser = (botX, botY) => {\n    const botXResult = this.logicWar(botX, botY.value);\n    const botYResult = this.logicWar(botY, botX.value);\n    let winner = []; //both bots are winners initially\n\n    if(botYResult && botXResult) {// its a tie, no winner, both bots survive\n      winner = [botX, botY];\n    }else if(!(botYResult || botXResult)){//its a loss, both lose\n      botX.destroy();\n      botY.destroy();\n    }else if(botYResult){ // botY wins\n      botX.destroy();\n      winner = [botY];\n    }else if(botXResult){ // botX wins\n      botY.destroy();\n      winner = [botX];\n    }\n    return winner;\n  }\n\n  momentaryFreeze = (botX, botY) => {\n    // freeze the colliding bots\n    botX.body.setVelocity(0, 0);;\n    botY.body.setVelocity(0, 0);;\n    setTimeout(() => {\n      // destroy the losing bot\n      const winner = this.destroyLoser(botX, botY);\n      // resume motion for the winning bot\n      this.resumeMotion(winner);\n    }, 1000);\n  }\n\n  resumeMotion = (winner) => {\n    if (winner.length) {\n      winner.forEach(bot => bot.body.setVelocity(bot.speed[0], bot.speed[1])); \n    }\n  };\n\n}\n\nexport default SceneOne;\n","import { ArenaWrapp, Game } from './Arena.styled';\nimport React, { useEffect } from 'react';\nimport Phaser from 'phaser';\nimport SceneOne from 'components/Scenes/SceneOne';\n\nconst Arena = () => {\n\n  useEffect(() => {\n    const config = {\n      type: Phaser.AUTO,\n      width: 500,\n      height: 535,\n      scene: SceneOne,\n      parent: \"game-container\",\n      physics: {\n        default: 'arcade',\n        arcade: {\n          gravity: 0,\n        },\n        debug: true,\n      },\n\n\n      \n    }; \n\n\n    const game = new Phaser.Game(config);\n\n\n    return () => {\n      game.destroy();\n    };\n  }, []);\n\n  return (\n    <ArenaWrapp>\n      <Game className='gamecanvas' id=\"game-container\" />\n    </ArenaWrapp>\n  );\n\n};\n\nexport default Arena;\n","import styled from 'styled-components';\n\nexport const ControllsWrapp = styled.div``;\n\nexport const BtnStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  height: 51px;\n  width: 160px;\n  margin: ${p => p.theme.space[5]}px;\n  padding: 16px 32px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.main};\n  text-align: center;\n  color: ${p => p.theme.colors.superLightgray};\n  background-color: ${p => p.theme.colors.medGreen};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: ${p => p.theme.colors.medBrown};\n    color: ${p => p.theme.colors.sandy};\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    padding: 18px 52px;\n\n    height: 55px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    padding: 23px 52px;\n    width: 200px;\n    height: 65px;\n  }\n`;\n","import { useState } from 'react';\nimport { ControllsWrapp, BtnStyled } from './GameControls.styled';\n\nconst GameControlls = () => {\n  const [isButtleOn, setIsButtleOn] = useState(false);\n  const handleClick = () => {\n    if (!isButtleOn) {\n      setIsButtleOn(true);\n    } else {\n      setIsButtleOn(false);\n    }\n  };\n\n  const buttonText = isButtleOn ? 'Stop' : 'Battle';\n  return (\n    <ControllsWrapp>\n      <BtnStyled type=\"button\" onClick={handleClick}>\n        {buttonText}\n      </BtnStyled>\n    </ControllsWrapp>\n  );\n};\n\nexport default GameControlls;\n","import styled from 'styled-components';\n\nexport const LeaderboardStyled = styled.div``;\n","import { LeaderboardStyled } from './Leaderboard.styled';\n\nconst Leaderboard = () => {\n  return (\n    <LeaderboardStyled>\n      <h2>Leaderboard</h2>\n    </LeaderboardStyled>\n  );\n};\n\nexport default Leaderboard;\n","import styled from 'styled-components';\n\nexport const PanelWrapp = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const BtnStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  height: 51px;\n  width: 160px;\n  margin: ${p => p.theme.space[5]}px;\n  padding: 16px 32px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.main};\n  text-align: center;\n  color: ${p => p.theme.colors.superLightgray};\n  background-color: ${p => p.theme.colors.medGreen};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: ${p => p.theme.colors.medBrown};\n    color: ${p => p.theme.colors.sandy};\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    padding: 18px 52px;\n    height: 55px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    padding: 23px 52px;\n    width: 200px;\n    height: 65px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalDiv = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  min-width: 800px;\n  padding: 40px;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 60px;\n  color: ${p => p.theme.colors.superDarkGreen};\n  background-color: ${p => p.theme.colors.lightGreen};\n`;\n\nexport const Title = styled.h3`\n  font-size: 30px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding-left: 50px;\n  padding-right: 50px;\n`;\n\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const SelectStyled = styled.select`\n  min-width: 100px;\n  height: 51px;\n  margin: 22px 0 22px auto;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.content};\n  text-align: center;\n  color: ${p => p.theme.colors.medGreen};\n  background-color: ${p => p.theme.colors.superLightGreen};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: none;\n  border-top-left-radius: 30px;\n  border-top-right-radius: 80px;\n  border-bottom-left-radius: 80px;\n  border-bottom-right-radius: 30px;\n\n  cursor: pointer;\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 130px;\n    height: 55px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    font-size: 16px;\n    width: 160px;\n    height: 65px;\n  }\n  option {\n    color: ${p => p.theme.colors.medGreen};\n    background: ${p => p.theme.colors.superLightGreen};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    display: flex;\n    white-space: pre;\n    min-height: 30px;\n    padding: 0px 3px 3px;\n  }\n`;\nexport const LabelStyled = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.superDarkGreen};\n`;\n\nexport const CheckBox = styled.input`\n  width: 20px;\n  height: 20px;\n  margin-left: 10px;\n  background-color: ${p => p.theme.colors.medBrown};\n  &:checked {\n    color: red;\n    background-color: ${p => p.theme.colors.medBrown};\n    box-shadow: 0 0 0 3px ${p => p.theme.colors.medBrown};\n  }\n  input:checked + label {\n    color: red;\n  }\n`;\nexport const InputName = styled.input`\n  width: 200px;\n  height: 50px;\n  border-top-left-radius: 30px;\n  border-top-right-radius: 80px;\n  border-bottom-left-radius: 80px;\n  border-bottom-right-radius: 30px;\n  border: none;\n  font-family: ${p => p.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 18px;\n  padding: 0 32px 0 32px;\n  margin: 10px 0 10px auto;\n  color: ${p => p.theme.colors.medGreen};\n  background: ${p => p.theme.colors.superLightGreen};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 250px;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 24px;\n  }\n  &:hover {\n    border: none;\n    outline: none;\n  }\n  &:active {\n    border: none;\n    outline: none;\n  }\n  &:focus {\n    border: none;\n    outline: none;\n  }\n`;\n\nexport const Input = styled.input`\n  color: ${p => p.theme.colors.superLightGreen};\n  background: ${p => p.theme.colors.lightGreen};\n`;\n\nexport const BtnSubmit = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  white-space: nowrap;\n  box-sizing: border-box;\n  min-width: 113px;\n  margin-left: auto;\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-right: auto;\n  font-family: ${p => p.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 18px;\n  padding: 0 32px 0 32px;\n  font-size: 14px;\n  color: ${p => p.theme.colors.superDarkGreen};\n  padding: 16px 32px;\n  background-color: ${p => p.theme.colors.superLightGreen};\n  outline: none;\n  border: none;\n  border-top-left-radius: 30px;\n  border-top-right-radius: 80px;\n  border-bottom-left-radius: 80px;\n  border-bottom-right-radius: 30px;\n  text-align: center;\n  cursor: pointer;\n  transition: ${p => p.theme.transitions.main};\n  &:hover {\n    background: ${p => p.theme.colors.superDarkGreen};\n    color: ${p => p.theme.colors.superLightgray};\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    padding: 18px 52px;\n    min-width: 130px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    padding: 23px 52px;\n    min-width: 160px;\n  }\n`;\n","import { useState } from 'react';\n\nimport {\n  BtnSubmit,\n  CheckBox,\n  Form,\n  Input,\n  InputName,\n  InputWrap,\n  LabelStyled,\n  SelectStyled,\n} from './ConfigurationForm.styled';\n\nconst ConfigurationForm = ({ onClose }) => {\n  const [botNameOne, setBotNameOne] = useState('');\n  const [boolNumberOne, setBoolNumberOne] = useState('0');\n  const [checked, setChecked] = useState(false);\n  const [botNameTwo, setBotNameTwo] = useState('');\n  const [boolNumberTwo, setBoolNumberTwo] = useState('0');\n  const [speed, setSpeed] = useState('0');\n  const [operation, setOperation] = useState('AND');\n  const [direction, setDirection] = useState('North');\n\n  const handleChange = e => {\n    switch (e.target.id) {\n      case 'name1':\n        const bot =\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1);\n        setBotNameOne(bot);\n\n        break;\n      case 'number1':\n        setBoolNumberOne(e.target.value);\n\n        break;\n      case 'skipBot':\n        setChecked(prevState => (prevState === false ? true : false));\n        break;\n      case 'name2':\n        const bot2 =\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1);\n        if (botNameOne === bot2) {\n          console.log('Please change the name for second bot');\n        }\n        setBotNameTwo(bot2);\n\n        break;\n\n      case 'number2':\n        setBoolNumberTwo(e.target.value);\n\n        break;\n      case 'operation':\n        setOperation(e.target.value);\n\n        break;\n      case 'speed':\n        setSpeed(e.target.value);\n\n        break;\n      case 'direction':\n        setDirection(e.target.value);\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (botNameOne === botNameTwo) {\n      console.log('Sorry the names are same');\n      return;\n    } else {\n      const firstBot = {\n        botName1: botNameOne,\n        botNumber1: boolNumberOne,\n      };\n      const secondtBot = {\n        botName2: botNameTwo,\n        botNumber2: boolNumberTwo,\n      };\n      const data = {\n        bots: checked ? [firstBot, secondtBot] : [firstBot],\n        checked,\n        speed: speed,\n        operation: operation,\n        direction: direction,\n      };\n\n      const config = JSON.stringify(data);\n      localStorage.setItem('configs', config);\n      onClose();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputWrap>\n        <>\n          <LabelStyled htmlFor=\"name1\">\n            Name for bot 1:\n            <InputName\n              id=\"name1\"\n              type=\"text\"\n              name=\"name1\"\n              onChange={handleChange}\n            />\n          </LabelStyled>\n          <LabelStyled>\n            Boolean for bot 1:\n            <SelectStyled\n              id=\"number1\"\n              autoFocus={true}\n              defaultValue={boolNumberOne}\n              onChange={handleChange}\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n            </SelectStyled>\n          </LabelStyled>\n        </>\n\n        <>\n          <LabelStyled\n            htmlFor=\"skipBot\"\n            style={{\n              color: '#52615d',\n              justifyContent: 'start',\n              margin: '22px auto 22px auto',\n            }}\n          >\n            Add second bot?\n            <CheckBox\n              id=\"skipBot\"\n              name=\"skipBot\"\n              type=\"checkbox\"\n              checked={checked}\n              onChange={handleChange}\n            />\n          </LabelStyled>\n          {checked && (\n            <>\n              <LabelStyled htmlFor=\"name2\">\n                Name for bot 2:\n                <InputName\n                  id=\"name2\"\n                  type=\"text\"\n                  name=\"name2\"\n                  onChange={handleChange}\n                />\n              </LabelStyled>\n              <LabelStyled>\n                Boolean for bot 2:\n                <SelectStyled\n                  id=\"number2\"\n                  autoFocus={true}\n                  defaultValue={boolNumberTwo}\n                  onChange={handleChange}\n                >\n                  <option value=\"0\">0</option>\n                  <option value=\"1\">1</option>\n                </SelectStyled>\n              </LabelStyled>\n            </>\n          )}\n        </>\n      </InputWrap>\n      <LabelStyled>\n        Boolean operation:\n        <SelectStyled\n          id=\"operation\"\n          autoFocus={true}\n          defaultValue={operation}\n          onChange={handleChange}\n        >\n          <option value=\"AND\">AND</option>\n          <option value=\"OR\">OR</option>\n          <option value=\"XOR\">XOR</option>\n          <option value=\"NOT\">NOT</option>\n        </SelectStyled>\n      </LabelStyled>\n      <LabelStyled htmlFor=\"speed\">\n        Volume:\n        <Input\n          type=\"range\"\n          id=\"speed\"\n          name=\"speed\"\n          min=\"0\"\n          max=\"10\"\n          step={1}\n          value={speed}\n          onChange={handleChange}\n        />\n      </LabelStyled>\n      <LabelStyled>\n        Direction:\n        <SelectStyled\n          id=\"direction\"\n          autoFocus={true}\n          defaultValue={direction}\n          onChange={handleChange}\n        >\n          <option value=\"North\">North</option>\n          <option value=\"South\">South</option>\n          <option value=\"East\">East</option>\n          <option value=\"West\">West</option>\n        </SelectStyled>\n      </LabelStyled>\n      <BtnSubmit type=\"click\">Save</BtnSubmit>\n    </Form>\n  );\n};\n\nexport default ConfigurationForm;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalDiv, Overlay, Title } from './Modal.styled';\nimport ConfigurationForm from 'components/ConfigurationForm/ConfigurationForm';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose }) => {\n  const closeByBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const closeByEsc = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', closeByEsc);\n\n    return () => {\n      window.removeEventListener('keydown', closeByEsc);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <Overlay onClick={closeByBackdrop}>\n      <ModalDiv>\n        <Title>Choose configuration</Title>\n        <ConfigurationForm onClose={onClose} />\n      </ModalDiv>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport GameControlls from 'components/GameControls/GameControls';\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\nimport { BtnStyled, PanelWrapp } from './GamePanel.styled';\nimport Modal from 'components/Modal';\n\nconst GamePanel = () => {\n  const [isModalShown, setIsModalShown] = useState(false);\n\n  const toogleModal = () => {\n    setIsModalShown(prevState => !prevState);\n  };\n  return (\n    <>\n      <PanelWrapp>\n        <BtnStyled type=\"button\" onClick={toogleModal}>\n          Open settings\n        </BtnStyled>\n\n        <GameControlls />\n        <Leaderboard />\n      </PanelWrapp>\n      {isModalShown && <Modal onClose={toogleModal} />}\n    </>\n  );\n};\n\nexport default GamePanel;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: ${p => p.theme.breakpoints[0]};\n  margin: 0 auto;\n  padding: 0 16px;\n\n  @media screen and (min-width: 768px) {\n    max-width: ${p => p.theme.breakpoints[1]};\n    padding: 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: ${p => p.theme.breakpoints[2]};\n    padding: 0 50px;\n  }\n`;\n","import { Container } from './MainContainer.styled';\n\nconst MainContainer = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nexport default MainContainer;\n","import styled from 'styled-components';\n\nexport const StyledWrapp = styled.div`\n  display: block;\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n","import Arena from 'components/Arena/Arena';\n\nimport GamePanel from 'components/GamePanel/GamePanel';\nimport MainContainer from 'components/MainContainer/MainContainer';\nimport { StyledWrapp } from './GamePage.styled';\n\nconst GamePage = () => {\n  return (\n    <MainContainer>\n      <StyledWrapp>\n        <GamePanel />\n        <Arena />\n      </StyledWrapp>\n    </MainContainer>\n  );\n};\n\nexport default GamePage;\n"],"names":["ArenaWrapp","styled","_templateObject","_taggedTemplateLiteral","Game","_templateObject2","_Phaser$Scene","_inherits","SceneOne","_super","_createSuper","_this","_classCallCheck","call","key","loadImage","robotObject","load","image","name","createBots","bot","physics","add","location","x","y","setScale","bots","push","addBehaviour","index","data","robotData","setVelocity","speed","value","operator","setBounce","setCollideWorldBounds","addCollisionBtnBots","_loop","i","_loop2","j","collider","momentaryFreeze","length","logicWar","oponentValue","result","destroyLoser","botX","botY","botXResult","botYResult","winner","destroy","body","setTimeout","resumeMotion","forEach","_createClass","_this2","this","Game_background","_this3","world","enable","Phaser","useEffect","config","type","width","height","scene","parent","default","arcade","gravity","debug","game","_jsx","children","className","id","ControllsWrapp","BtnStyled","p","theme","space","fontSizes","s","lineHeights","main","colors","superLightgray","medGreen","borders","none","radii","normal","medBrown","sandy","breakpoints","_useState","useState","_useState2","_slicedToArray","isButtleOn","setIsButtleOn","buttonText","onClick","LeaderboardStyled","PanelWrapp","Overlay","ModalDiv","superDarkGreen","lightGreen","Title","_templateObject3","Form","InputWrap","SelectStyled","content","superLightGreen","fontWeights","LabelStyled","_templateObject4","bold","CheckBox","_templateObject5","InputName","_templateObject6","fonts","Input","_templateObject7","BtnSubmit","_templateObject8","transitions","_ref","onClose","botNameOne","setBotNameOne","_useState3","_useState4","boolNumberOne","setBoolNumberOne","_useState5","_useState6","checked","setChecked","_useState7","_useState8","botNameTwo","setBotNameTwo","_useState9","_useState10","boolNumberTwo","setBoolNumberTwo","_useState11","_useState12","setSpeed","_useState13","_useState14","operation","setOperation","_useState15","_useState16","direction","setDirection","handleChange","e","target","charAt","toUpperCase","slice","prevState","bot2","console","log","_jsxs","onSubmit","preventDefault","firstBot","botName1","botNumber1","botName2","botNumber2","JSON","stringify","localStorage","setItem","_Fragment","htmlFor","onChange","autoFocus","defaultValue","style","color","justifyContent","margin","min","max","step","modalRoot","document","querySelector","closeByEsc","code","window","addEventListener","removeEventListener","createPortal","currentTarget","ConfigurationForm","isModalShown","setIsModalShown","toogleModal","GameControlls","Leaderboard","Modal","Container","StyledWrapp","MainContainer","GamePanel","Arena"],"sourceRoot":""}