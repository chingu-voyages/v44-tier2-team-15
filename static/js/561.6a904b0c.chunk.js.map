{"version":3,"file":"static/js/561.6a904b0c.chunk.js","mappings":"0KAEaA,E,QAAYC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6PACpB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,IAKzB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,IAK3B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,I,SCP5C,EAJsB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACvB,OAAOC,EAAAA,EAAAA,KAACT,EAAS,CAAAQ,SAAEA,GACrB,C,2ICFaE,EAAaT,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4EAGnB,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAE,IAGzBC,EAAOX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,oE,yHCyJ9B,EA9Jc,SAAAW,IAAAC,EAAAA,EAAAA,GAAAC,EAAAF,GAAA,IAAAG,GAAAC,EAAAA,EAAAA,GAAAF,GACZ,SAAAA,IAAe,IAADG,EA2CV,OA3CUC,EAAAA,EAAAA,GAAA,KAAAJ,IACZG,EAAAF,EAAAI,KAAA,KAAM,CAAEC,IAAK,YA+DfC,UAAY,SAACC,GACXL,EAAKM,KAAKC,MAAMF,EAAYG,KAAMH,EAAYE,MAChD,EAACP,EAEDS,WAAa,SAACJ,GACZ,IAAMK,EAAMV,EAAKW,QAAQC,IAAIL,MAC3BF,EAAYQ,SAASC,EACrBT,EAAYQ,SAASE,EACrBV,EAAYG,MACZQ,SAAS,IAEXhB,EAAKiB,KAAKC,KAAKR,EACjB,EAACV,EAEDmB,aAAe,SAACT,EAAKU,GACnB,IAAMC,EAAOrB,EAAKsB,UAAUF,GAC5BV,EAAIa,YAAYF,EAAKG,MAAMV,EAAGO,EAAKG,MAAMT,GACzCL,EAAIe,MAAQJ,EAAKI,MACjBf,EAAIgB,SAAWL,EAAKK,SACpBhB,EAAIiB,UAAU,EAAG,GACjBjB,EAAIkB,uBAAsB,GAC1BlB,EAAIc,MAAQ,CAACH,EAAKG,MAAMV,EAAGO,EAAKG,MAAMT,EACxC,EAACf,EAED6B,oBAAsB,WACpB,IAD2B,IAADC,EAAA,SAAAC,GAExB,IAD0C,IAADC,EAAA,SAAAC,GAEvCjC,EAAKW,QAAQC,IAAIsB,SAASlC,EAAKiB,KAAKc,GAAI/B,EAAKiB,KAAKgB,IAAI,WACpDjC,EAAKmC,gBAAgBnC,EAAKiB,KAAKc,GAAI/B,EAAKiB,KAAKgB,GAC/C,GACF,EAJSA,EAAIF,EAAI,EAAGE,EAAIjC,EAAKiB,KAAKmB,OAAQH,IAAGD,EAAAC,EAK/C,EANSF,EAAI,EAAGA,EAAI/B,EAAKiB,KAAKmB,OAAQL,IAAGD,EAAAC,EAO3C,EAAC/B,EAEDqC,SAAW,SAAC3B,EAAK4B,GAEf,IAAIC,GAAS,EAcb,MAboB,QAAjB7B,EAAIgB,SACLa,EAAS7B,EAAIe,OAASa,EACE,OAAjB5B,EAAIgB,SACXa,EAAS7B,EAAIe,OAASa,EACE,QAAjB5B,EAAIgB,SACXa,IAAW7B,EAAIe,OAASa,GACA,SAAjB5B,EAAIgB,SACXa,IAAW7B,EAAIe,OAASa,GACA,QAAjB5B,EAAIgB,SACZa,EAAS7B,EAAIe,MAAQa,EACI,SAAjB5B,EAAIgB,WACXa,IAAW7B,EAAIe,MAAQa,IAElBC,CACT,EAACvC,EAEDwC,aAAe,SAACC,EAAMC,GACpB,IAAMC,EAAa3C,EAAKqC,SAASI,EAAMC,EAAKjB,OACtCmB,EAAa5C,EAAKqC,SAASK,EAAMD,EAAKhB,OACxCoB,EAAS,GAcb,OAZGD,GAAcD,EACfE,EAAS,CAACJ,EAAMC,GACPE,GAAcD,EAGhBC,GACPH,EAAKK,UACLD,EAAS,CAACH,IACHC,IACPD,EAAKI,UACLD,EAAS,CAACJ,KAPVA,EAAKK,UACLJ,EAAKI,WAQAD,CACT,EAAC7C,EAEDmC,gBAAkB,SAACM,EAAMC,GAEvBD,EAAKM,KAAKxB,YAAY,EAAG,GACzBmB,EAAKK,KAAKxB,YAAY,EAAG,GACzByB,YAAW,WAET,IAAMH,EAAS7C,EAAKwC,aAAaC,EAAMC,GAEvC1C,EAAKiD,aAAaJ,EACpB,GAAG,IACL,EAAC7C,EAEDiD,aAAe,SAACJ,GACVA,EAAOT,QACTS,EAAOK,SAAQ,SAAAxC,GAAG,OAAIA,EAAIqC,KAAKxB,YAAYb,EAAIc,MAAM,GAAId,EAAIc,MAAM,GAAG,GAE1E,EAvJExB,EAAKiB,KAAO,GAGZjB,EAAKsB,UAAY,CACf,CACEd,KAAK,QACLD,MAAM,mBACNiB,MAAO,CAACV,EAAG,IAAIC,EAAG,IAClBW,SAAU,OACVD,MAAO,EACPZ,SAAU,CAACC,EAAE,IAAKC,EAAE,KAGtB,CACEP,KAAK,WACLD,MAAM,mBACNiB,MAAO,CAACV,EAAG,GAAGC,EAAG,KACjBW,SAAU,KACVD,MAAO,EACPZ,SAAU,CAACC,EAAE,IAAKC,EAAE,MAGtB,CACEP,KAAK,SACLD,MAAM,mBACNiB,MAAO,CAACV,EAAG,GAAIC,EAAG,KAClBW,SAAU,MACVD,MAAO,EACPZ,SAAU,CAACC,EAAE,IAAKC,EAAE,MAItB,CACEP,KAAK,QACLD,MAAM,mBACNiB,MAAO,CAACV,EAAG,GAAIC,EAAG,IAClBW,SAAU,OACVD,MAAO,EACPZ,SAAU,CAACC,EAAE,IAAKC,EAAE,OAGtBf,CACJ,CAkBC,OAlBAmD,EAAAA,EAAAA,GAAAtD,EAAA,EAAAM,IAAA,UAAAsB,MAED,WAAW,IAAD2B,EAAA,KACRC,KAAK/C,KAAKC,MAAM,UAAW+C,GAC3BD,KAAK/B,UAAU4B,SAAQ,SAAA7C,GAAW,OAAI+C,EAAKhD,UAAUC,EAAY,GACnE,GAAC,CAAAF,IAAA,SAAAsB,MAED,WAAU,IAAD8B,EAAA,KAEPF,KAAK1C,QAAQ6C,MAAMC,OAAOJ,MAE1BA,KAAKzC,IAAIL,MAAM,EAAG,EAAG,WAErB8C,KAAK/B,UAAU4B,SAAQ,SAAA7C,GAAW,OAAKkD,EAAK9C,WAAWJ,EAAY,IAEnEgD,KAAKxB,sBAELwB,KAAKpC,KAAKiC,SAAQ,SAACxC,EAAKU,GAAK,OAAKmC,EAAKpC,aAAaT,EAAKU,EAAM,GACjE,KAACvB,CAAA,CA/DW,CAAS6D,IAAAA,O,SCwCvB,EAtCc,WA8BZ,OA5BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,CACbC,KAAMH,IAAAA,KACNI,MAAO,IACPC,OAAQ,IACRC,MAAOnE,EACPoE,OAAQ,iBACRtD,QAAS,CACPuD,QAAS,SACTC,OAAQ,CACNC,QAAS,GAEXC,OAAO,IAQLC,EAAO,IAAIZ,IAAAA,MAAYE,GAG7B,OAAO,WACLU,EAAKxB,SACP,CACF,GAAG,KAGDxD,EAAAA,EAAAA,KAACC,EAAU,CAAAF,UACTC,EAAAA,EAAAA,KAACG,EAAI,CAAC8E,UAAU,aAAaC,GAAG,oBAItC,E,UCvCaC,EAAY3F,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,upBAO1B,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAE,IAElB,SAAAP,GAAC,OAAIA,EAAEC,MAAMwF,UAAUC,CAAC,IACtB,SAAA1F,GAAC,OAAIA,EAAEC,MAAM0F,YAAYC,IAAI,IAEnC,SAAA5F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOC,cAAc,IACvB,SAAA9F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOE,QAAQ,IAEtC,SAAA/F,GAAC,OAAIA,EAAEC,MAAM+F,QAAQC,IAAI,IAClB,SAAAjG,GAAC,OAAIA,EAAEC,MAAMiG,MAAMC,MAAM,IAC5B,SAAAnG,GAAC,OAAIA,EAAEC,MAAMmG,YAAYR,IAAI,IAErB,SAAA5F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOQ,QAAQ,IACvC,SAAArG,GAAC,OAAIA,EAAEC,MAAM4F,OAAOS,KAAK,IAEJ,SAAAtG,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,IAK3B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,ICN7D,EApBsB,WACpB,IAAAqG,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAS1BI,EAAaF,EAAa,OAAS,SACzC,OACEtG,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACmF,EAAS,CAACZ,KAAK,SAASkC,QAXT,WAIhBF,GAHGD,EAKP,EAKkDvG,SAC3CyG,KAIT,ECnBaE,EAAclH,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mHAIpB,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAE,IAE3ByG,EAAgBnH,EAAAA,GAAAA,QAAcY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,oGAIxB,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAE,IAG3B0G,EAAWpH,EAAAA,GAAAA,GAASqH,IAAAA,GAAAnH,EAAAA,EAAAA,GAAA,+FAEtB,SAAAC,GAAC,OAAIA,EAAEC,MAAM4F,OAAOE,QAAQ,IACjB,SAAA/F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOsB,eAAe,IACnC,SAAAnH,GAAC,OAAIA,EAAEC,MAAM4F,OAAOE,QAAQ,IAGrCqB,EAAWvH,EAAAA,GAAAA,GAASwH,IAAAA,GAAAtH,EAAAA,EAAAA,GAAA,sDAEX,SAAAC,GAAC,OAAIA,EAAEC,MAAM4F,OAAOE,QAAQ,IAGrCuB,EAAczH,EAAAA,GAAAA,MAAY0H,IAAAA,GAAAxH,EAAAA,EAAAA,GAAA,mDACjB,SAAAC,GAAC,OAAIA,EAAEC,MAAM4F,OAAOE,QAAQ,IACvC,SAAA/F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOC,cAAc,ICe7C,EAnCoB,WAClB,IAAAS,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BvE,EAAIyE,EAAA,GAAEe,EAAOf,EAAA,GAOpB,OALA/B,EAAAA,EAAAA,YAAU,WACR,IAAMtC,EAAOqF,KAAKC,MAAMC,aAAaC,QAAQ,YAC7CJ,EAAQpF,EACV,GAAG,KAGD/B,EAAAA,EAAAA,KAAAwH,EAAAA,SAAA,CAAAzH,SACY,OAAT4B,IACC8F,EAAAA,EAAAA,MAACf,EAAW,CAAA3G,SAAA,EACVC,EAAAA,EAAAA,KAAC2G,EAAa,CAAA5G,SAAC,iBACfC,EAAAA,EAAAA,KAACiH,EAAW,CAAAlH,UACV0H,EAAAA,EAAAA,MAAA,MAAA1H,SAAA,EACEC,EAAAA,EAAAA,KAAC+G,EAAQ,CAAAhH,SAAC,UACVC,EAAAA,EAAAA,KAAC+G,EAAQ,CAAAhH,SAAC,UACVC,EAAAA,EAAAA,KAAC+G,EAAQ,CAAAhH,SAAC,iBAGdC,EAAAA,EAAAA,KAAA,SAAAD,SACG4B,EAAKA,KAAK+F,KAAI,SAAAtG,GAAG,OAChBqG,EAAAA,EAAAA,MAAA,MAAiBvC,GAAI9D,EAAI8D,GAAGnF,SAAA,EAC1BC,EAAAA,EAAAA,KAAC4G,EAAQ,CAAA7G,SAAEqB,EAAIuG,WACf3H,EAAAA,EAAAA,KAAC4G,EAAQ,CAAA7G,SAAEqB,EAAIwG,QACf5H,EAAAA,EAAAA,KAAC4G,EAAQ,CAAA7G,SAAEqB,EAAIyG,WAHRzG,EAAI8D,GAIR,UAOnB,E,UCxCa4C,EAAUtI,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yLAYpBqI,EAAWvI,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,6UAcvB,SAAAC,GAAC,OAAIA,EAAEC,MAAM4F,OAAOwC,cAAc,IACvB,SAAArI,GAAC,OAAIA,EAAEC,MAAM4F,OAAOyC,UAAU,ICzB9CC,GAAYC,SAASC,cAAc,eA8BzC,GA5Bc,SAAHtI,GAA+B,IAAzBuI,EAAOvI,EAAPuI,QAAStI,EAAQD,EAARC,SAoBxB,OAbAsE,EAAAA,EAAAA,YAAU,WACR,IAAMiE,EAAa,SAAAC,GACF,WAAXA,EAAEC,MACJH,GAEJ,EAGA,OAFAI,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACxC,CACF,GAAG,CAACD,KAEGO,EAAAA,EAAAA,eACL5I,EAAAA,EAAAA,KAAC8H,EAAO,CAACrB,QApBa,SAAA8B,GAClBA,EAAEM,SAAWN,EAAEO,eACjBT,GAEJ,EAgBoCtI,UAChCC,EAAAA,EAAAA,KAAC+H,EAAQ,CAAAhI,SAAEA,MAEbmI,GAEJ,E,4CC9Baa,GAAOvJ,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sHAQlBsJ,GAAYxJ,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kEAEf,SAAAC,GAAC,OAAkB,IAAbA,EAAEH,OAAkB,MAAQ,QAAQ,IAIjDyJ,GAAWzJ,EAAAA,GAAAA,IAAUqH,IAAAA,GAAAnH,EAAAA,EAAAA,GAAA,uDAIrBwJ,GAAe1J,EAAAA,GAAAA,OAAawH,IAAAA,GAAAtH,EAAAA,EAAAA,GAAA,2wBAKxB,SAAAC,GAAC,OAAIA,EAAEC,MAAM0F,YAAY6D,OAAO,IAEtC,SAAAxJ,GAAC,OAAIA,EAAEC,MAAM4F,OAAOE,QAAQ,IACjB,SAAA/F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOsB,eAAe,IAQvB,SAAAnH,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,IAI3B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,IAMhD,SAAAF,GAAC,OAAIA,EAAEC,MAAM4F,OAAOE,QAAQ,IACvB,SAAA/F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOsB,eAAe,IAClC,SAAAnH,GAAC,OAAIA,EAAEC,MAAMwJ,YAAYtD,MAAM,IAOrCuD,GAAc7J,EAAAA,GAAAA,MAAY0H,IAAAA,GAAAxH,EAAAA,EAAAA,GAAA,2HAItB,SAAAC,GAAC,OAAIA,EAAEC,MAAMwJ,YAAYE,IAAI,IACnC,SAAA3J,GAAC,OAAIA,EAAEC,MAAM4F,OAAOwC,cAAc,IAGhCuB,GAAW/J,EAAAA,GAAAA,MAAYgK,IAAAA,GAAA9J,EAAAA,EAAAA,GAAA,iQAId,SAAAC,GAAC,OAAIA,EAAEC,MAAM4F,OAAOQ,QAAQ,IAI1B,SAAArG,GAAC,OAAIA,EAAEC,MAAM4F,OAAOQ,QAAQ,IACxB,SAAArG,GAAC,OAAIA,EAAEC,MAAM4F,OAAOQ,QAAQ,IAM3CyD,GAAYjK,EAAAA,GAAAA,MAAYkK,IAAAA,GAAAhK,EAAAA,EAAAA,GAAA,ovBAQpB,SAAAC,GAAC,OAAIA,EAAEC,MAAM+J,MAAMpE,IAAI,IAEvB,SAAA5F,GAAC,OAAIA,EAAEC,MAAMwJ,YAAYtD,MAAM,IAKrC,SAAAnG,GAAC,OAAIA,EAAEC,MAAM4F,OAAOE,QAAQ,IACvB,SAAA/F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOsB,eAAe,IACjB,SAAAnH,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,IAuBhD+J,GAAQpK,EAAAA,GAAAA,MAAYqK,IAAAA,GAAAnK,EAAAA,EAAAA,GAAA,iEAEtB,SAAAC,GAAC,OAAIA,EAAEC,MAAM4F,OAAOsB,eAAe,IAC9B,SAAAnH,GAAC,OAAIA,EAAEC,MAAM4F,OAAOyC,UAAU,IAGjC6B,GAAYtK,EAAAA,GAAAA,OAAauK,IAAAA,GAAArK,EAAAA,EAAAA,GAAA,46BAStB,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAE,IAEpB,SAAAP,GAAC,OAAIA,EAAEC,MAAM+J,MAAMpE,IAAI,IAEvB,SAAA5F,GAAC,OAAIA,EAAEC,MAAMwJ,YAAYtD,MAAM,IACjC,SAAAnG,GAAC,OAAIA,EAAEC,MAAMwF,UAAUC,CAAC,IAI5B,SAAA1F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOwC,cAAc,IAEvB,SAAArI,GAAC,OAAIA,EAAEC,MAAM4F,OAAOsB,eAAe,IASzC,SAAAnH,GAAC,OAAIA,EAAEC,MAAMmG,YAAYR,IAAI,IAE3B,SAAA5F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOwC,cAAc,IACvC,SAAArI,GAAC,OAAIA,EAAEC,MAAM4F,OAAOC,cAAc,IAEb,SAAA9F,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,IAI3B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,ICyD7D,GA5M0B,SAAHC,GAAqB,IAAfuI,EAAOvI,EAAPuI,QAC3BnC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzC8D,EAAU5D,EAAA,GAAE6D,EAAa7D,EAAA,GAChC8D,GAA0C/D,EAAAA,EAAAA,UAAS,KAAIgE,GAAA9D,EAAAA,EAAAA,GAAA6D,EAAA,GAAhDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA8BnE,EAAAA,EAAAA,WAAS,GAAMoE,GAAAlE,EAAAA,EAAAA,GAAAiE,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAoCvE,EAAAA,EAAAA,UAAS,IAAGwE,GAAAtE,EAAAA,EAAAA,GAAAqE,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA0C3E,EAAAA,EAAAA,UAAS,KAAI4E,GAAA1E,EAAAA,EAAAA,GAAAyE,EAAA,GAAhDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA0B/E,EAAAA,EAAAA,UAAS,KAAIgF,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GAAhChJ,EAAKiJ,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAAkClF,EAAAA,EAAAA,UAAS,OAAMmF,GAAAjF,EAAAA,EAAAA,GAAAgF,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAkCtF,EAAAA,EAAAA,UAAS,SAAQuF,GAAArF,EAAAA,EAAAA,GAAAoF,EAAA,GAA5CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,EAAe,SAAAtD,GACnB,OAAQA,EAAEM,OAAO3D,IACf,IAAK,QACH,IAAM9D,EACJmH,EAAEM,OAAO1G,MAAM2J,OAAO,GAAGC,cAAgBxD,EAAEM,OAAO1G,MAAM6J,MAAM,GAChE/B,EAAc7I,GACd,MACF,IAAK,UACHiJ,EAAiB9B,EAAEM,OAAO1G,OAC1B,MACF,IAAK,UACHsI,GAAW,SAAAwB,GAAS,OAAmB,IAAdA,CAAkC,IAC3D,MACF,IAAK,QACH,IAAMC,EACJ3D,EAAEM,OAAO1G,MAAM2J,OAAO,GAAGC,cAAgBxD,EAAEM,OAAO1G,MAAM6J,MAAM,GAChEnB,EAAcqB,GACd,MACF,IAAK,UACHjB,EAAiB1C,EAAEM,OAAO1G,OAC1B,MACF,IAAK,YACHqJ,EAAajD,EAAEM,OAAO1G,OACtB,MACF,IAAK,QACHiJ,EAAS7C,EAAEM,OAAO1G,OAClB,MACF,IAAK,YACHyJ,EAAarD,EAAEM,OAAO1G,OAK5B,EA0CA,OACEsF,EAAAA,EAAAA,MAACsB,GAAI,CAACoD,SAzCa,SAAA5D,GAEnB,GADAA,EAAE6D,iBACG5B,GAAYR,EAGV,IAAIQ,GAAaR,GAAeY,EAGhC,GAAIJ,GAAWR,IAAeY,EACnCyB,GAAAA,GAAAA,MAAY,gDADP,CAIL,IAAMC,EAAW,CACfpH,IAAIqH,EAAAA,GAAAA,MACJ5E,QAASqC,EACTwC,UAAWpC,EACXxC,KAAM,EACNC,OAAQ,GAEJ4E,EAAa,CACjBvH,IAAIqH,EAAAA,GAAAA,MACJ5E,QAASiD,EACT4B,UAAWxB,EACXpD,KAAM,EACNC,OAAQ,GAEJ9F,EAAO,CACXJ,KAAM6I,EAAU,CAAC8B,EAAUG,GAAc,CAACH,GAC1C9B,QAAAA,EACAtI,MAAOA,EACPqJ,UAAWA,EACXI,UAAWA,GAEPrH,EAAS8C,KAAKsF,UAAU3K,GAC9BuF,aAAaqF,QAAQ,UAAWrI,GAChC+H,GAAAA,GAAAA,QAAc,uCACdhE,GACF,MA/BEgE,GAAAA,GAAAA,MAAY,0CAHZA,GAAAA,GAAAA,MAAY,0BAmChB,EAG+BtM,SAAA,EAC3B0H,EAAAA,EAAAA,MAACuB,GAAS,CAACxJ,OAAQgL,EAAQzK,SAAA,EACzB0H,EAAAA,EAAAA,MAACwB,GAAQ,CAAAlJ,SAAA,EACP0H,EAAAA,EAAAA,MAAC4B,GAAW,CAACuD,QAAQ,QAAO7M,SAAA,CACzByK,EAAU,SAAW,kBACtBxK,EAAAA,EAAAA,KAACyJ,GAAS,CACRvE,GAAG,QACHX,KAAK,OACLrD,KAAK,QACL2L,SAAUhB,EACViB,YAAY,mBAGhBrF,EAAAA,EAAAA,MAAC4B,GAAW,CAAAtJ,SAAA,CAAC,cAEX0H,EAAAA,EAAAA,MAACyB,GAAY,CACXhE,GAAG,UACH6H,WAAW,EACXC,aAAc5C,EACdyC,SAAUhB,EAAa9L,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,IAAGpC,SAAC,OAClBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,IAAGpC,SAAC,gBAIxBC,EAAAA,EAAAA,KAACiJ,GAAQ,CAAAlJ,SACNyK,IACC/C,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAzH,SAAA,EACE0H,EAAAA,EAAAA,MAAC4B,GAAW,CAACuD,QAAQ,QAAO7M,SAAA,CAAC,UAE3BC,EAAAA,EAAAA,KAACyJ,GAAS,CACRvE,GAAG,QACHX,KAAK,OACLrD,KAAK,QACL2L,SAAUhB,EACViB,YAAY,mBAGhBrF,EAAAA,EAAAA,MAAC4B,GAAW,CAAAtJ,SAAA,CAAC,cAEX0H,EAAAA,EAAAA,MAACyB,GAAY,CACXhE,GAAG,UACH6H,WAAW,EACXC,aAAchC,EACd6B,SAAUhB,EAAa9L,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,IAAGpC,SAAC,OAClBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,IAAGpC,SAAC,qBAO9B0H,EAAAA,EAAAA,MAAC4B,GAAW,CACVuD,QAAQ,UACRK,MAAO,CACLC,MAAO,UACPC,eAAgB,QAChBC,OAAQ,qBACRrN,SAAA,CACH,mBAECC,EAAAA,EAAAA,KAACuJ,GAAQ,CACPrE,GAAG,UACHhE,KAAK,UACLqD,KAAK,WACLiG,QAASA,EACTqC,SAAUhB,QAGdpE,EAAAA,EAAAA,MAAC4B,GAAW,CAAAtJ,SAAA,CAAC,sBAEX0H,EAAAA,EAAAA,MAACyB,GAAY,CACXhE,GAAG,YACH6H,WAAW,EACXC,aAAczB,EACdsB,SAAUhB,EAAa9L,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,MAAKpC,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,KAAIpC,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,MAAKpC,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,MAAKpC,SAAC,eAGxB0H,EAAAA,EAAAA,MAAC4B,GAAW,CAACuD,QAAQ,QAAO7M,SAAA,CAAC,UAE3BC,EAAAA,EAAAA,KAAC4J,GAAK,CACJrF,KAAK,QACLW,GAAG,QACHhE,KAAK,QACLmM,IAAI,IACJC,IAAI,IACJC,KAAM,EACNpL,MAAOD,EACP2K,SAAUhB,QAGdpE,EAAAA,EAAAA,MAAC4B,GAAW,CAAAtJ,SAAA,CAAC,cAEX0H,EAAAA,EAAAA,MAACyB,GAAY,CACXhE,GAAG,YACH6H,WAAW,EACXC,aAAcrB,EACdkB,SAAUhB,EAAa9L,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,QAAOpC,SAAC,WACtBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,QAAOpC,SAAC,WACtBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,OAAMpC,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQmC,MAAM,OAAMpC,SAAC,gBAGzBC,EAAAA,EAAAA,KAAC8J,GAAS,CAACvF,KAAK,QAAOxE,SAAC,WAG9B,ECvNayN,GAAQhO,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qGAIX,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAE,IAG3BuN,GAAOjO,EAAAA,GAAAA,OAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wICUjC,GAd2B,SAAHI,GAAqB,IAAfuI,EAAOvI,EAAPuI,QAC5B,OACEZ,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAzH,SAAA,EACEC,EAAAA,EAAAA,KAAC0N,GAAAA,GAAAA,SAAoB,CAACvL,MAAO,CAAEwL,KAAM,OAAQT,MAAO,WAAYnN,UAC9DC,EAAAA,EAAAA,KAACyN,GAAI,CAAChH,QAAS4B,EAAQtI,UACrBC,EAAAA,EAAAA,KAAC4N,GAAAA,IAAoB,SAGzB5N,EAAAA,EAAAA,KAACwN,GAAK,CAAAzN,SAAC,0BACPC,EAAAA,EAAAA,KAAC6N,GAAiB,CAACxF,QAASA,MAGlC,ECfayF,GAAatO,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gGAOvByF,GAAY3F,EAAAA,GAAAA,OAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wrBAO1B,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAE,IAElB,SAAAP,GAAC,OAAIA,EAAEC,MAAMwF,UAAUC,CAAC,IACtB,SAAA1F,GAAC,OAAIA,EAAEC,MAAM0F,YAAYC,IAAI,IAEnC,SAAA5F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOC,cAAc,IACvB,SAAA9F,GAAC,OAAIA,EAAEC,MAAM4F,OAAOE,QAAQ,IAEtC,SAAA/F,GAAC,OAAIA,EAAEC,MAAM+F,QAAQC,IAAI,IAClB,SAAAjG,GAAC,OAAIA,EAAEC,MAAMiG,MAAMC,MAAM,IAGpB,SAAAnG,GAAC,OAAIA,EAAEC,MAAM4F,OAAOQ,QAAQ,IACvC,SAAArG,GAAC,OAAIA,EAAEC,MAAM4F,OAAOS,KAAK,IAEJ,SAAAtG,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,IAI3B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,ICJ7D,GAzBkB,WAChB,IAAAqG,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD6H,EAAY3H,EAAA,GAAE4H,EAAe5H,EAAA,GAE9B6H,EAAc,WAClBD,GAAgB,SAAA/B,GAAS,OAAKA,CAAS,GACzC,EACA,OACExE,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAzH,SAAA,EACE0H,EAAAA,EAAAA,MAACqG,GAAU,CAAA/N,SAAA,EACTC,EAAAA,EAAAA,KAACmF,GAAS,CAACZ,KAAK,SAASkC,QAASwH,EAAYlO,SAAC,mBAI/CC,EAAAA,EAAAA,KAACkO,EAAa,KACdlO,EAAAA,EAAAA,KAACmO,EAAW,OAEbJ,IACC/N,EAAAA,EAAAA,KAACoO,GAAK,CAAC/F,QAAS4F,EAAYlO,UAC1BC,EAAAA,EAAAA,KAACqO,GAAkB,CAAChG,QAAS4F,QAKvC,E,WC3BaK,GAAc9O,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4JAEH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAE,ICa7D,GAXiB,WACf,OACEG,EAAAA,EAAAA,KAACuO,GAAAA,EAAa,CAAAxO,UACZ0H,EAAAA,EAAAA,MAAC6G,GAAW,CAAAvO,SAAA,EACVC,EAAAA,EAAAA,KAACwO,GAAS,KACVxO,EAAAA,EAAAA,KAACyO,EAAK,QAId,C","sources":["components/MainContainer/MainContainer.styled.js","components/MainContainer/MainContainer.jsx","components/Arena/Arena.styled.js","components/Scenes/SceneOne.js","components/Arena/Arena.jsx","components/GamePanel/GameControls/GameControls.styled.js","components/GamePanel/GameControls/GameControls.jsx","components/GamePanel/Leaderboard/Leaderboard.styled.js","components/GamePanel/Leaderboard/Leaderboard.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ConfigurationPanel/ConfigurationForm/ConfigurationForm.styled.js","components/ConfigurationPanel/ConfigurationForm/ConfigurationForm.jsx","components/ConfigurationPanel/ConfigurationPanel.styled.js","components/ConfigurationPanel/ConfigurationPanel.jsx","components/GamePanel/GamePanel.styled.js","components/GamePanel/GamePanel.jsx","pages/GamePage/GamePage.styled.js","pages/GamePage/GamePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: ${p => p.theme.breakpoints[0]};\n  margin: 0 auto;\n  padding: 0 16px;\n\n  @media screen and (min-width: 768px) {\n    max-width: ${p => p.theme.breakpoints[1]};\n    padding: 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: ${p => p.theme.breakpoints[2]};\n    padding: 0 50px;\n  }\n`;\n","import { Container } from './MainContainer.styled';\n\nconst MainContainer = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nexport default MainContainer;\n","import styled from 'styled-components';\n\nexport const ArenaWrapp = styled.div`\n  min-width: 500px;\n  min-height: 535px;\n  margin-left: ${p => p.theme.space[5]}px;\n`;\n\nexport const Game = styled.div`\n  width: 500px;\n  height: 535px;\n  position: absolute;\n`;\n","import Phaser from 'phaser';\nimport Game_background from '../../images/game/bg_main.png';\n\nclass SceneOne extends Phaser.Scene {\n  constructor() {\n    super({ key: 'sc_one' });\n    this.bots = [];\n\n    // this is user input comming from React\n    this.robotData = [\n      {\n        name:'xylon',\n        image:'images/bot_1.png',\n        speed: {x: 100,y: 70},\n        operator: 'NAND',\n        value: 1,\n        location: {x:100, y:50},\n      },\n\n      {\n        name:'megatron',\n        image:'images/bot_2.png',\n        speed: {x: 70,y: 100},\n        operator: 'OR',\n        value: 0,\n        location: {x:400, y:100}\n      },\n\n      {\n        name:'cyclon',\n        image:'images/bot_3.png',\n        speed: {x: 50, y: 120},\n        operator: 'XOR',\n        value: 0,\n        location: {x:100, y:500}\n\n      },\n\n      {\n        name:'pylon',\n        image:'images/bot_4.png',\n        speed: {x: 80, y: 30},\n        operator: 'XNOR',\n        value: 1,\n        location: {x:200, y:300}\n      }\n\n    ];\n  }\n\n  preload() {\n    this.load.image('game_bg', Game_background);\n    this.robotData.forEach(robotObject => this.loadImage(robotObject)); \n  }\n\n  create() {  \n    // Enable physics on the arena\n    this.physics.world.enable(this);\n    // add background to the scene\n    this.add.image(0, 0, 'game_bg');\n    // add the robots to the scene\n    this.robotData.forEach(robotObject =>  this.createBots(robotObject));\n    //add collision between bots\n    this.addCollisionBtnBots();\n    // add motion to the images\n    this.bots.forEach((bot, index) => this.addBehaviour(bot, index));\n  }\n\n  loadImage = (robotObject) => {\n    this.load.image(robotObject.name, robotObject.image);\n  };\n\n  createBots = (robotObject) => {\n    const bot = this.physics.add.image(\n      robotObject.location.x,\n      robotObject.location.y,\n      robotObject.name\n    ).setScale(0.5);\n\n    this.bots.push(bot);\n  };\n\n  addBehaviour = (bot, index) => {\n    const data = this.robotData[index];\n    bot.setVelocity(data.speed.x, data.speed.y); // Moves the image horizontally at a speed of 100 pixels per second\n    bot.value = data.value;\n    bot.operator = data.operator\n    bot.setBounce(1, 1);\n    bot.setCollideWorldBounds(true);\n    bot.speed = [data.speed.x, data.speed.y]\n  };\n\n  addCollisionBtnBots = () => {\n    for (let i = 0; i < this.bots.length; i++) {\n      for (let j = i + 1; j < this.bots.length; j++) {\n        this.physics.add.collider(this.bots[i], this.bots[j], () => {\n          this.momentaryFreeze(this.bots[i], this.bots[j]);\n        });\n      }\n    };\n  };\n \n  logicWar = (bot, oponentValue) => {\n    // AND, OR, XOR, NAND, NOR, XNOR\n    let result = false;\n    if(bot.operator === 'AND'){\n      result = bot.value && oponentValue\n    }else if(bot.operator === 'OR'){\n      result = bot.value || oponentValue\n    }else if(bot.operator === 'NOR'){\n      result = !(bot.value || oponentValue)\n    }else if(bot.operator === 'NAND'){\n      result = !(bot.value && oponentValue)\n    }else if(bot.operator === 'NOR'){\n     result = bot.value ^ oponentValue\n    }else if(bot.operator === 'XNOR'){\n      result = !(bot.value ^ oponentValue)\n    };\n    return result;\n  }\n\n  destroyLoser = (botX, botY) => {\n    const botXResult = this.logicWar(botX, botY.value);\n    const botYResult = this.logicWar(botY, botX.value);\n    let winner = []; //both bots are winners initially\n\n    if(botYResult && botXResult) {// its a tie, no winner, both bots survive\n      winner = [botX, botY];\n    }else if(!(botYResult || botXResult)){//its a loss, both lose\n      botX.destroy();\n      botY.destroy();\n    }else if(botYResult){ // botY wins\n      botX.destroy();\n      winner = [botY];\n    }else if(botXResult){ // botX wins\n      botY.destroy();\n      winner = [botX];\n    }\n    return winner;\n  }\n\n  momentaryFreeze = (botX, botY) => {\n    // freeze the colliding bots\n    botX.body.setVelocity(0, 0);;\n    botY.body.setVelocity(0, 0);;\n    setTimeout(() => {\n      // destroy the losing bot\n      const winner = this.destroyLoser(botX, botY);\n      // resume motion for the winning bot\n      this.resumeMotion(winner);\n    }, 1000);\n  }\n\n  resumeMotion = (winner) => {\n    if (winner.length) {\n      winner.forEach(bot => bot.body.setVelocity(bot.speed[0], bot.speed[1])); \n    }\n  };\n\n}\n\nexport default SceneOne;\n","import { ArenaWrapp, Game } from './Arena.styled';\nimport React, { useEffect } from 'react';\nimport Phaser from 'phaser';\nimport SceneOne from 'components/Scenes/SceneOne';\n\nconst Arena = () => {\n\n  useEffect(() => {\n    const config = {\n      type: Phaser.AUTO,\n      width: 500,\n      height: 535,\n      scene: SceneOne,\n      parent: \"game-container\",\n      physics: {\n        default: 'arcade',\n        arcade: {\n          gravity: 0,\n        },\n        debug: true,\n      },\n\n\n      \n    }; \n\n\n    const game = new Phaser.Game(config);\n\n\n    return () => {\n      game.destroy();\n    };\n  }, []);\n\n  return (\n    <ArenaWrapp>\n      <Game className='gamecanvas' id=\"game-container\" />\n    </ArenaWrapp>\n  );\n\n};\n\nexport default Arena;\n","import styled from 'styled-components';\n\nexport const BtnStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  height: 51px;\n  width: 160px;\n  margin: ${p => p.theme.space[5]}px;\n  padding: 16px 32px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.main};\n  text-align: center;\n  color: ${p => p.theme.colors.superLightgray};\n  background-color: ${p => p.theme.colors.medGreen};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  transition: ${p => p.theme.transitions.main};\n  &:hover {\n    background-color: ${p => p.theme.colors.medBrown};\n    color: ${p => p.theme.colors.sandy};\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    padding: 18px 52px;\n\n    height: 55px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    padding: 23px 52px;\n    width: 200px;\n    height: 65px;\n  }\n`;\n","import { useState } from 'react';\nimport { BtnStyled } from './GameControls.styled';\n\nconst GameControlls = () => {\n  const [isButtleOn, setIsButtleOn] = useState(false);\n  const handleClick = () => {\n    if (!isButtleOn) {\n      setIsButtleOn(true);\n    } else {\n      setIsButtleOn(false);\n    }\n  };\n\n  const buttonText = isButtleOn ? 'Stop' : 'Battle';\n  return (\n    <div>\n      <BtnStyled type=\"button\" onClick={handleClick}>\n        {buttonText}\n      </BtnStyled>\n    </div>\n  );\n};\n\nexport default GameControlls;\n","import styled from 'styled-components';\n\nexport const TableStyled = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  vertical-align: middle;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\nexport const CaptionStyled = styled.caption`\n  font-weight: bold;\n  font-size: 24px;\n  text-align: center;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const TdStyled = styled.td`\n  padding: 10px;\n  color: ${p => p.theme.colors.medGreen};\n  background-color: ${p => p.theme.colors.superLightGreen};\n  border: 1px solid ${p => p.theme.colors.medGreen};\n`;\n\nexport const ThStyled = styled.th`\n  padding: 20px;\n  border: 1px solid ${p => p.theme.colors.medGreen};\n`;\n\nexport const TheadStyled = styled.thead`\n  background-color: ${p => p.theme.colors.medGreen};\n  color: ${p => p.theme.colors.superLightgray};\n`;\n","import { useState, useEffect } from 'react';\nimport {\n  CaptionStyled,\n  TdStyled,\n  ThStyled,\n  TableStyled,\n  TheadStyled,\n} from './Leaderboard.styled';\n\nconst Leaderboard = () => {\n  const [bots, setBots] = useState(null);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('configs'));\n    setBots(data);\n  }, []);\n\n  return (\n    <>\n      {bots !== null && (\n        <TableStyled>\n          <CaptionStyled>Leaderboard</CaptionStyled>\n          <TheadStyled>\n            <tr>\n              <ThStyled>Bots</ThStyled>\n              <ThStyled>Wins</ThStyled>\n              <ThStyled>Losses</ThStyled>\n            </tr>\n          </TheadStyled>\n          <tbody>\n            {bots.bots.map(bot => (\n              <tr key={bot.id} id={bot.id}>\n                <TdStyled>{bot.botName}</TdStyled>\n                <TdStyled>{bot.wins}</TdStyled>\n                <TdStyled>{bot.losses}</TdStyled>\n              </tr>\n            ))}\n          </tbody>\n        </TableStyled>\n      )}\n    </>\n  );\n};\n\nexport default Leaderboard;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow-y: scroll;\n  opacity: 1;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalDiv = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 700px;\n  height: 750px;\n  padding: 30px;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 60px;\n  overflow-y: auto;\n  color: ${p => p.theme.colors.superDarkGreen};\n  background-color: ${p => p.theme.colors.lightGreen};\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalDiv, Overlay } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  const closeByBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const closeByEsc = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', closeByEsc);\n\n    return () => {\n      window.removeEventListener('keydown', closeByEsc);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <Overlay onClick={closeByBackdrop}>\n      <ModalDiv>{children}</ModalDiv>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: ${p => (p.styled === true ? 'row' : 'column')};\n  gap: 10px;\n`;\n\nexport const FlexWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const SelectStyled = styled.select`\n  min-width: 100px;\n  height: 51px;\n  margin: 22px 0 22px auto;\n  font-size: 14px;\n  line-height: ${p => p.theme.lineHeights.content};\n  text-align: center;\n  color: ${p => p.theme.colors.medGreen};\n  background-color: ${p => p.theme.colors.superLightGreen};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: none;\n  border-top-left-radius: 30px;\n  border-top-right-radius: 80px;\n  border-bottom-left-radius: 80px;\n  border-bottom-right-radius: 30px;\n  cursor: pointer;\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 130px;\n    height: 55px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    font-size: 16px;\n    width: 160px;\n    height: 65px;\n  }\n  option {\n    color: ${p => p.theme.colors.medGreen};\n    background: ${p => p.theme.colors.superLightGreen};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    display: flex;\n    white-space: pre;\n    min-height: 30px;\n    padding: 0px 3px 3px;\n  }\n`;\nexport const LabelStyled = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.superDarkGreen};\n`;\n\nexport const CheckBox = styled.input`\n  width: 20px;\n  height: 20px;\n  margin-left: 10px;\n  background-color: ${p => p.theme.colors.medBrown};\n  cursor: pointer;\n  &:checked {\n    color: red;\n    background-color: ${p => p.theme.colors.medBrown};\n    box-shadow: 0 0 0 3px ${p => p.theme.colors.medBrown};\n  }\n  input:checked + label {\n    color: red;\n  }\n`;\nexport const InputName = styled.input`\n  width: 150px;\n  height: 50px;\n  border-top-left-radius: 30px;\n  border-top-right-radius: 80px;\n  border-bottom-left-radius: 80px;\n  border-bottom-right-radius: 30px;\n  border: none;\n  font-family: ${p => p.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: 12px;\n  line-height: 18px;\n  padding: 0 32px 0 32px;\n  margin: 10px 0 10px 10px;\n  color: ${p => p.theme.colors.medGreen};\n  background: ${p => p.theme.colors.superLightGreen};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 200px;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 24px;\n  }\n  &:hover {\n    border: none;\n    outline: none;\n  }\n  &:active {\n    border: none;\n    outline: none;\n  }\n  &:focus {\n    border: none;\n    outline: none;\n  }\n  &:placeholder-shown {\n    font-size: 11px;\n  }\n`;\n\nexport const Input = styled.input`\n  cursor: pointer;\n  color: ${p => p.theme.colors.superLightGreen};\n  background: ${p => p.theme.colors.lightGreen};\n`;\n\nexport const BtnSubmit = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  white-space: nowrap;\n  box-sizing: border-box;\n  min-width: 113px;\n  margin-left: auto;\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-right: auto;\n  font-family: ${p => p.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 18px;\n  padding: 0 32px 0 32px;\n  font-size: 14px;\n  color: ${p => p.theme.colors.superDarkGreen};\n  padding: 16px 32px;\n  background-color: ${p => p.theme.colors.superLightGreen};\n  outline: none;\n  border: none;\n  border-top-left-radius: 30px;\n  border-top-right-radius: 80px;\n  border-bottom-left-radius: 80px;\n  border-bottom-right-radius: 30px;\n  text-align: center;\n  cursor: pointer;\n  transition: ${p => p.theme.transitions.main};\n  &:hover {\n    background: ${p => p.theme.colors.superDarkGreen};\n    color: ${p => p.theme.colors.superLightgray};\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    padding: 18px 52px;\n    min-width: 130px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    padding: 23px 52px;\n    min-width: 160px;\n  }\n`;\n","import { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { nanoid } from 'nanoid';\nimport {\n  BtnSubmit,\n  CheckBox,\n  Form,\n  Input,\n  InputName,\n  InputWrap,\n  LabelStyled,\n  SelectStyled,\n  FlexWrap,\n} from './ConfigurationForm.styled';\n\nconst ConfigurationForm = ({ onClose }) => {\n  const [botNameOne, setBotNameOne] = useState('');\n  const [boolNumberOne, setBoolNumberOne] = useState('0');\n  const [checked, setChecked] = useState(false);\n  const [botNameTwo, setBotNameTwo] = useState('');\n  const [boolNumberTwo, setBoolNumberTwo] = useState('0');\n  const [speed, setSpeed] = useState('1');\n  const [operation, setOperation] = useState('AND');\n  const [direction, setDirection] = useState('North');\n\n  const handleChange = e => {\n    switch (e.target.id) {\n      case 'name1':\n        const bot =\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1);\n        setBotNameOne(bot);\n        break;\n      case 'number1':\n        setBoolNumberOne(e.target.value);\n        break;\n      case 'skipBot':\n        setChecked(prevState => (prevState === false ? true : false));\n        break;\n      case 'name2':\n        const bot2 =\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1);\n        setBotNameTwo(bot2);\n        break;\n      case 'number2':\n        setBoolNumberTwo(e.target.value);\n        break;\n      case 'operation':\n        setOperation(e.target.value);\n        break;\n      case 'speed':\n        setSpeed(e.target.value);\n        break;\n      case 'direction':\n        setDirection(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!checked && !botNameOne) {\n      toast.error('Please, enter bot name.');\n      return;\n    } else if (checked && (!botNameOne || !botNameTwo)) {\n      toast.error('Please, enter names for two bots.');\n      return;\n    } else if (checked && botNameOne === botNameTwo) {\n      toast.error('Both names are same. Please change them.');\n      return;\n    } else {\n      const firstBot = {\n        id: nanoid(),\n        botName: botNameOne,\n        botNumber: boolNumberOne,\n        wins: 0,\n        losses: 0,\n      };\n      const secondtBot = {\n        id: nanoid(),\n        botName: botNameTwo,\n        botNumber: boolNumberTwo,\n        wins: 0,\n        losses: 0,\n      };\n      const data = {\n        bots: checked ? [firstBot, secondtBot] : [firstBot],\n        checked,\n        speed: speed,\n        operation: operation,\n        direction: direction,\n      };\n      const config = JSON.stringify(data);\n      localStorage.setItem('configs', config);\n      toast.success('You successfully add configurations');\n      onClose();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputWrap styled={checked}>\n        <FlexWrap>\n          <LabelStyled htmlFor=\"name1\">\n            {checked ? 'Bot 1:' : 'Name for bot 1'}\n            <InputName\n              id=\"name1\"\n              type=\"text\"\n              name=\"name1\"\n              onChange={handleChange}\n              placeholder=\"Enter name\"\n            />\n          </LabelStyled>\n          <LabelStyled>\n            Boolean 1:\n            <SelectStyled\n              id=\"number1\"\n              autoFocus={true}\n              defaultValue={boolNumberOne}\n              onChange={handleChange}\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n            </SelectStyled>\n          </LabelStyled>\n        </FlexWrap>\n        <FlexWrap>\n          {checked && (\n            <>\n              <LabelStyled htmlFor=\"name2\">\n                Bot 2:\n                <InputName\n                  id=\"name2\"\n                  type=\"text\"\n                  name=\"name2\"\n                  onChange={handleChange}\n                  placeholder=\"Enter name\"\n                />\n              </LabelStyled>\n              <LabelStyled>\n                Boolean 2:\n                <SelectStyled\n                  id=\"number2\"\n                  autoFocus={true}\n                  defaultValue={boolNumberTwo}\n                  onChange={handleChange}\n                >\n                  <option value=\"0\">0</option>\n                  <option value=\"1\">1</option>\n                </SelectStyled>\n              </LabelStyled>\n            </>\n          )}\n        </FlexWrap>\n      </InputWrap>\n      <LabelStyled\n        htmlFor=\"skipBot\"\n        style={{\n          color: '#52615d',\n          justifyContent: 'start',\n          margin: '8px auto 8px auto',\n        }}\n      >\n        Add second bot?\n        <CheckBox\n          id=\"skipBot\"\n          name=\"skipBot\"\n          type=\"checkbox\"\n          checked={checked}\n          onChange={handleChange}\n        />\n      </LabelStyled>\n      <LabelStyled>\n        Boolean operation:\n        <SelectStyled\n          id=\"operation\"\n          autoFocus={true}\n          defaultValue={operation}\n          onChange={handleChange}\n        >\n          <option value=\"AND\">AND</option>\n          <option value=\"OR\">OR</option>\n          <option value=\"XOR\">XOR</option>\n          <option value=\"NOT\">NOT</option>\n        </SelectStyled>\n      </LabelStyled>\n      <LabelStyled htmlFor=\"speed\">\n        Speed:\n        <Input\n          type=\"range\"\n          id=\"speed\"\n          name=\"speed\"\n          min=\"1\"\n          max=\"8\"\n          step={1}\n          value={speed}\n          onChange={handleChange}\n        />\n      </LabelStyled>\n      <LabelStyled>\n        Direction:\n        <SelectStyled\n          id=\"direction\"\n          autoFocus={true}\n          defaultValue={direction}\n          onChange={handleChange}\n        >\n          <option value=\"North\">North</option>\n          <option value=\"South\">South</option>\n          <option value=\"East\">East</option>\n          <option value=\"West\">West</option>\n        </SelectStyled>\n      </LabelStyled>\n      <BtnSubmit type=\"click\">Save</BtnSubmit>\n    </Form>\n  );\n};\n\nexport default ConfigurationForm;\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  position: relative;\n  font-size: 30px;\n  text-align: center;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Icon = styled.button`\n  width: 50px;\n  height: 50px;\n  margin-left: auto;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import { IconContext } from 'react-icons';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport ConfigurationForm from 'components/ConfigurationPanel/ConfigurationForm';\nimport { Title, Icon } from './ConfigurationPanel.styled';\n\nconst ConfigurationPanel = ({ onClose }) => {\n  return (\n    <>\n      <IconContext.Provider value={{ size: '30px', color: '#2a3a42' }}>\n        <Icon onClick={onClose}>\n          <AiOutlineCloseCircle />\n        </Icon>\n      </IconContext.Provider>\n      <Title>Choose configuration</Title>\n      <ConfigurationForm onClose={onClose} />\n    </>\n  );\n};\n\nexport default ConfigurationPanel;\n","import styled from 'styled-components';\n\nexport const PanelWrapp = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const BtnStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  height: 51px;\n  width: 160px;\n  margin: ${p => p.theme.space[5]}px;\n  padding: 16px 32px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.main};\n  text-align: center;\n  color: ${p => p.theme.colors.superLightgray};\n  background-color: ${p => p.theme.colors.medGreen};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: ${p => p.theme.colors.medBrown};\n    color: ${p => p.theme.colors.sandy};\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    padding: 18px 52px;\n    height: 55px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    padding: 23px 52px;\n    width: 200px;\n    height: 65px;\n  }\n`;\n","import { useState } from 'react';\nimport GameControlls from 'components/GamePanel/GameControls';\nimport Leaderboard from 'components/GamePanel/Leaderboard';\nimport Modal from 'components/Modal';\nimport ConfigurationPanel from 'components/ConfigurationPanel';\nimport { BtnStyled, PanelWrapp } from './GamePanel.styled';\nconst GamePanel = () => {\n  const [isModalShown, setIsModalShown] = useState(false);\n\n  const toogleModal = () => {\n    setIsModalShown(prevState => !prevState);\n  };\n  return (\n    <>\n      <PanelWrapp>\n        <BtnStyled type=\"button\" onClick={toogleModal}>\n          Open settings\n        </BtnStyled>\n\n        <GameControlls />\n        <Leaderboard />\n      </PanelWrapp>\n      {isModalShown && (\n        <Modal onClose={toogleModal}>\n          <ConfigurationPanel onClose={toogleModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default GamePanel;\n","import styled from 'styled-components';\n\nexport const StyledWrapp = styled.div`\n  display: block;\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n  }\n`;\n","import Arena from 'components/Arena/Arena';\n\nimport GamePanel from 'components/GamePanel/GamePanel';\nimport MainContainer from 'components/MainContainer/MainContainer';\nimport { StyledWrapp } from './GamePage.styled';\n\nconst GamePage = () => {\n  return (\n    <MainContainer>\n      <StyledWrapp>\n        <GamePanel />\n        <Arena />\n      </StyledWrapp>\n    </MainContainer>\n  );\n};\n\nexport default GamePage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","p","theme","breakpoints","_ref","children","_jsx","ArenaWrapp","space","Game","_templateObject2","_Phaser$Scene","_inherits","SceneOne","_super","_createSuper","_this","_classCallCheck","call","key","loadImage","robotObject","load","image","name","createBots","bot","physics","add","location","x","y","setScale","bots","push","addBehaviour","index","data","robotData","setVelocity","speed","value","operator","setBounce","setCollideWorldBounds","addCollisionBtnBots","_loop","i","_loop2","j","collider","momentaryFreeze","length","logicWar","oponentValue","result","destroyLoser","botX","botY","botXResult","botYResult","winner","destroy","body","setTimeout","resumeMotion","forEach","_createClass","_this2","this","Game_background","_this3","world","enable","Phaser","useEffect","config","type","width","height","scene","parent","default","arcade","gravity","debug","game","className","id","BtnStyled","fontSizes","s","lineHeights","main","colors","superLightgray","medGreen","borders","none","radii","normal","transitions","medBrown","sandy","_useState","useState","_useState2","_slicedToArray","isButtleOn","setIsButtleOn","buttonText","onClick","TableStyled","CaptionStyled","TdStyled","_templateObject3","superLightGreen","ThStyled","_templateObject4","TheadStyled","_templateObject5","setBots","JSON","parse","localStorage","getItem","_Fragment","_jsxs","map","botName","wins","losses","Overlay","ModalDiv","superDarkGreen","lightGreen","modalRoot","document","querySelector","onClose","closeByEsc","e","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","Form","InputWrap","FlexWrap","SelectStyled","content","fontWeights","LabelStyled","bold","CheckBox","_templateObject6","InputName","_templateObject7","fonts","Input","_templateObject8","BtnSubmit","_templateObject9","botNameOne","setBotNameOne","_useState3","_useState4","boolNumberOne","setBoolNumberOne","_useState5","_useState6","checked","setChecked","_useState7","_useState8","botNameTwo","setBotNameTwo","_useState9","_useState10","boolNumberTwo","setBoolNumberTwo","_useState11","_useState12","setSpeed","_useState13","_useState14","operation","setOperation","_useState15","_useState16","direction","setDirection","handleChange","charAt","toUpperCase","slice","prevState","bot2","onSubmit","preventDefault","toast","firstBot","nanoid","botNumber","secondtBot","stringify","setItem","htmlFor","onChange","placeholder","autoFocus","defaultValue","style","color","justifyContent","margin","min","max","step","Title","Icon","IconContext","size","AiOutlineCloseCircle","ConfigurationForm","PanelWrapp","isModalShown","setIsModalShown","toogleModal","GameControlls","Leaderboard","Modal","ConfigurationPanel","StyledWrapp","MainContainer","GamePanel","Arena"],"sourceRoot":""}